{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","tNode","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","element","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","callback","useCaptureOrIndx","sort","sortListeners","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","removeListeners","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hostStylingHackMap","squashedClassDeclarations","hackSquashDeclaration","set","hackSetStaticClasses","staticClassStartIndex","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","hackImplementationOfElementStyleProp","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","styleName","eStyles","style","name_1","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0-beta.2+77.sha-d766ad0\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        for (var i = startingIndex; i < directiveEnd; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = lView[secondParam];\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[FLAGS] !== 'number' &&\n            typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        if (directive != undefined) {\n            hackImplementationOfElementStyleProp(index, styleIndex, valueToAdd, suffix, directive);\n        }\n        else {\n            updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd);\n        }\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        var squashedClassDeclarations = hackSquashDeclaration(classDeclarations);\n        hostStylingHackMap.set(directive, {\n            classDeclarations: squashedClassDeclarations,\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n        hackSetStaticClasses(node, squashedClassDeclarations);\n    }\n    function hackSetStaticClasses(node, classDeclarations) {\n        // Static classes need to be set here because static classes don't generate\n        // elementClassProp instructions.\n        var lView = getLView();\n        var staticClassStartIndex = classDeclarations.indexOf(1 /* VALUES_MODE */) + 1;\n        var renderer = lView[RENDERER];\n        for (var i = staticClassStartIndex; i < classDeclarations.length; i += 2) {\n            var className = classDeclarations[i];\n            var value = classDeclarations[i + 1];\n            // if value is true, then this is a static class and we should set it now.\n            // class bindings are set separately in elementClassProp.\n            if (value === true) {\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(node, className);\n                }\n                else {\n                    var classList = node.classList;\n                    classList.add(className);\n                }\n            }\n        }\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var styleName = hostStylingHack.styleDeclarations[styleIndex];\n        var renderer = lView[RENDERER];\n        setStyle(node, styleName, value, renderer, null);\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChangesInternal(this._lView, this.context, null);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0-beta.2+77.sha-d766ad0');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations, flatten$1(ngModuleDef.imports.map(computeCombinedExports)));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBased(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBased(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}