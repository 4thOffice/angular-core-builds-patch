{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","template","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","isLView","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isLContainer","isRootView","readPatchedData","readPatchedLView","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","arr","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","splice","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","viewOrContainer","executeOnDestroys","removeListeners","tCleanup","cleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","allowValueChange","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","style","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","dirs","getDirectiveRegistryValuesIndexOf","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","Promise","refreshDescendantViews","creationMode","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","rendererFactory","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialClasses","renderInitialStyles","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","textContent","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","queries","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","destroyed","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.5+59.sha-395fb18.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, Object) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /**\n     * Returns true if the value is an {@link LView}\n     * @param value the value to check\n     */\n    function isLView(value) {\n        return Array.isArray(value) && value.length >= HEADER_OFFSET;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return null;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            element || null,\n            [0],\n            [0],\n            null,\n        ];\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        context[1 /* DirectiveRegistryPosition */].push(directiveRef, -1, false, null);\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        if (Array.isArray(value) && value.length >= 9 /* SingleStylesStartPosition */) {\n            return typeof value[0 /* MasterFlagPosition */] === 'number' &&\n                value[3 /* InitialClassValuesPosition */][0 /* DefaultNullValuePosition */] === null;\n        }\n        return false;\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null, null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null, null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directiveRef) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directiveRef) == -1) {\n            // this is a new directive which we have not seen yet.\n            allocateDirectiveIntoContext(context, directiveRef);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[0 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[3 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* InitialClassesStringPosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* InitialClassesStringPosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[2 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* InitialClassesStringPosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 2 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* InitialClassesStringPosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces incase they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[HOST] = host;\n        lView[T_HOST] = tHostNode;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        ngDevMode && assertLView(projectedView);\n        var projectionNodeIndex = -1;\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentView = findComponentView(projectedView);\n                    var currentComponentHost = currentComponentView[T_HOST];\n                    var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        if (Array.isArray(firstProjectedNode)) {\n                            appendChild(firstProjectedNode, tProjectionNode, lView);\n                        }\n                        else {\n                            projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                            projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                            nodeToProject = firstProjectedNode;\n                            projectedView = getLViewParent(currentComponentView);\n                            continue;\n                        }\n                    }\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                    projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.5+59.sha-395fb18.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().ownPropMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}