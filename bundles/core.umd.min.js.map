{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLViewData","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","directiveIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","getComponent","loadContext","ctx","getHostComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","WRAP_RENDERER_FACTORY2","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","tElementNode","hostRNode","rootFlags","rootViewInjector","createChainedInjector","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","SecurityContext","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","Sanitizer","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Version","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","VERSION","full","major","minor","patch","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","markDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵWRAP_RENDERER_FACTORY2","ɵsetClassMetadata","setClassMetadata","clazz","ɵRender3DebugRendererFactory2","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-rc.0+16.sha-81e975a.with-local-changes\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element && (element.nodeType == Node.ELEMENT_NODE || element.nodeType == Node.TEXT_NODE), true, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    function _getViewData() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData, rf) {\n        var tView = getTView();\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(viewData, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(viewData);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, viewData);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass, rf);\n            }\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer, injector) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] =\n            injector === undefined ? (viewData ? viewData[INJECTOR] : null) : injector;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, stylingIndex, value, directiveIndex) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directiveIndex) {\n        if (directiveIndex)\n            return; // supported in next PR\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directiveIndex) {\n        if (directiveIndex)\n            return; // supported in next PR\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directiveIndex) {\n        if (directiveIndex)\n            return; // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directiveIndex the index for the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directiveIndex) {\n        if (directiveIndex)\n            return; // supported in next PR\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData, null);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass, rf) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._view[HOST] == null) {\n                    var tView = this._view[HOST_NODE];\n                    return collectNativeNodes(this._view, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, 0 /* Default */, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     *\n     * @publicApi\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     *\n     * @publicApi\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     * @publicApi\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     *\n     * @publicApi\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     *\n     * @publicApi\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, undefined, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootView), rootView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootView = _rootView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = _getViewData();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = _getViewData();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = _getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getRenderer();\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getTView();\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var tView = getTView();\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var viewData = _getViewData();\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = viewData[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lViewData = _getViewData();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lViewData);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return currentView[matchingIdx];\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-rc.0+16.sha-81e975a.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵdefineNgModule = defineNgModule;\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineNgModule = ɵdefineNgModule;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}