{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","clearResolutionOfComponentResourcesQueue","Promise","all","ViewEncapsulation","Set","componentNeedsResolution","clear","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","VIEWS","NATIVE","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","dirs","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","projectionNext","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","detectedIndex","getDirectiveRegistryValuesIndexOf","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialStyles","renderInitialStylingValues","renderInitialClasses","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","lastAttrIndex","stylingAttrsStartIndex","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","flushHooksUpTo","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","findLastNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵflushHooksUpTo","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.8+19.sha-2064508.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, and QUERIES are indices 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var VIEWS = 6;\n    var NATIVE = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the flushHooksUpTo instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing flushHooksUpTo(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var i = dirs.length;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        dirs.push(null, null, null, null);\n        dirs[i + 0 /* DirectiveValueOffset */] = directiveRef;\n        dirs[i + 2 /* DirtyFlagOffset */] = false;\n        dirs[i + 3 /* StyleSanitizerOffset */] = null;\n        // -1 is used to signal that the directive has been allocated, but\n        // no actual style or class bindings have been registered yet...\n        dirs[i + 1 /* SinglePropValuesIndexOffset */] = -1;\n        return i;\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveRef) {\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveRef);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveRef) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directives, directiveRef || null);\n        if (detectedIndex === -1) {\n            // this is a new directive which we have not seen yet.\n            detectedIndex = allocateDirectiveIntoContext(context, directiveRef);\n        }\n        var directiveIndex = detectedIndex / 4 /* Size */;\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 3 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces incase they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapRNode(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n                var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n                if (stylingAttrsStartIndex >= 0) {\n                    tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n                }\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Flushes all the lifecycle hooks for directives up until (and excluding) that node index\n     *\n     * @param index The index of the element in the `LView`\n     */\n    function flushHooksUpTo(index) {\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var lastAttrIndex = setUpAttributes(native, attrs);\n        var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n        if (stylingAttrsStartIndex >= 0) {\n            if (tNode.stylingTemplate) {\n                patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directive);\n            }\n            else {\n                tNode.stylingTemplate =\n                    initializeStaticContext(attrs, stylingAttrsStartIndex, directive);\n            }\n        }\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            [],\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.8+19.sha-2064508.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵflushHooksUpTo': flushHooksUpTo,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$2(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵflushHooksUpTo = flushHooksUpTo;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}