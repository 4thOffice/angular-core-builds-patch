{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","concatStringsWithSpace","before","after","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","ɵɵinvalidFactoryDep","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","assertDefined","actual","msg","throwError","expected","comparison","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","arrayMapSet","arrayMap","arrayMapIndexOf","arrayInsert2","array","value1","value2","end","arrayMapGet","_arrayIndexOfSorted","shift","start","middle","current","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_COMPONENT_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","instructionState","lFrame","createLFrame","bindingsEnabled","checkNoChangesMode","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","setActiveHostElement","elementIndex","setSelectedIndex","clearActiveHostElement","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","leaveDI","leaveView","enterView","selectedIndex","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","nextContextImpl","level","walkUpViews","nestingLevel","currentView","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","registerPostOrderHooks","directiveStart","directiveEnd","directiveDef","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","nodeIndex","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","mergeHostAttrs","src","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","hostView","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","view","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","registerPreOrderHooks","directiveIndex","preOrderHooks","preOrderCheckHooks","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","inertBody","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","prop","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","stylePropNeedsSanitization","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","load","getComponentLViewByIndex","slotValue","readPatchedData","readPatchedLView","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","getLContainerActiveIndex","lContainer","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","classIndexOf","className","classToSearch","startingIndex","foundIndex","length_1","NG_TEMPLATE_SELECTOR","isCssClassMatching","cssClassToMatch","isProjectionMode","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","chunk","stringifyCSSSelector","result","currentChunk","valueOrMarker","attrValue","NO_CHANGE","getLViewParent","getRootContext","viewOrComponent","getRootView","componentOrLView","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","toTStylingRange","prev","getTStylingRangePrev","tStylingRange","getTStylingRangePrevDuplicate","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","getTStylingRangeNextDuplicate","setTStylingRangeNextDuplicate","toDebugStyleBinding","isClassBased","tView_","bindings","range","classBindings","styleBindings","isTemplate","cursor","itemRange","prevDuplicate","nextDuplicate","nextIndex","prevIndex","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","firstUpdatePass","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","enumerable","configurable","TNode","propertyBindings","mergedAttrs","localNames","initialInputs","tViews","projectionNext","projection","stylesMap","classesMap","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindingsByExecutingExpandoInstructions","currentDirectiveIndex","instruction","providerCount","lframe","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","viewData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","ShadowDom","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","hasDirectives","findDirectiveDefMatches","registry","matches","markAsComponentHost","exportsMap","","totalDirectiveHostVars","initTNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","addHostBindingsToExpandoInstructions","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","growHostVarsSpace","cacheMatchingLocalNames","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedViews","movedLView","insertedComponentLView","movedTView","componentHostIdx","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","style","cssText","writeDirectClass","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef","createTemplateRef","TemplateRefToken","TemplateRef","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","remove","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","viewAttachedToContainer","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","move","newIndex","viewRefsArr","setLContainerActiveIndex","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","Invalid","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","USE_VALUE$2","EMPTY_ARRAY$1","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","processProvider","processInjectorType","set","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","add","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","typeName","isFactoryProvider","isExistingProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","multiProvider","multiProviderMixError","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","computeDeps","providerDeps","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","computeStaticStyling","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","comment","ɵɵtemplate","attrsIndex","localRefsIndex","templateFirstCreatePass","tViewConsts","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵinvalidFactory","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","property","ɵɵelementStart","getNamespace","elementStartFirstCreatePass","elementStart","getElementDepthCount","increaseElementDepthCount","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","EMPTY_ARRAY$3","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassName","resetParserState","parseClassNameNext","consumeWhitespace","consumeClassToken","startIndex","parseStyle","parseStyleNext","consumeStyleKey","ch","consumeSeparator","consumeStyleValue","ch1","ch2","ch3","lastChIndex","consumeQuotedText","separator","quoteCharCode","markDuplicates","tStylingKey","staticValues","isPrevDir","isClassBinding","tStylingAtIndex","isMap","foundDuplicate","tStylingValueAtCursor","tStyleRangeAtCursor","ɵɵstyleSanitizer","setCurrentStyleSanitizer","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleArrayMapSet","styleStringParser","ɵɵclassMap","classStringParser","suffixOrSanitizer","stylingPropertyFirstUpdatePass","styleSanitizer","getCurrentStyleSanitizer","updateStyling","normalizeAndApplySuffixOrSanitizer","stringParser","hasStylingInputShadow","isInHostBindings","updateStylingMap","oldArrayMap","newArrayMap","oldIndex","oldKey","setKey","toStylingArrayMap","styleArrayMap","isHostBindings","insertTStylingBinding","isHostBinding","tBindings","tmplHead","tmplTail","previousNode","setTStylingRangePrev","tRange","isStylingValuePresent","findStylingValue","applyStyling","isProcedural","addClass","classList","removeClass","removeStyle","removeProperty","setStyle","currentValue","staticArrayMap","initializeStylingStaticArrayMap","styleMap","classMap","mergeAttrs","ɵɵtext","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","hostRenderer","addVersion","viewRenderer","createRootComponent","componentDef","rootLView","hostFeatures","instantiateRootComponent","rootTNode","rootTView","createRootContext","LifecycleHooksFeature","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","mergeHostAttrsAcrossInheritance","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","noop","RendererStyleFlags2","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","TemplateRef_","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","stringifyCSSSelectorList","selectorList","isBoundToModule","tElementNode","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","Math","floor","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","DEFAULT_LOCALE_ID","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","ɵɵpureFunction3","pureFunction3Internal","ɵɵpureFunction4","pureFunction4Internal","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","pureFunctionVInternal","bindingRoot","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","i_1","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$5","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","forceRecalc","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","ngFactoryDef","compileFactory","injectFn","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","Pipe","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","DEFAULT_CURRENCY_CODE","TRANSLATIONS","TRANSLATIONS_FORMAT","ivyEnabled","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__PRE_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","copyDomProperties","NodePrototype","descriptors","getOwnPropertyDescriptors","startsWith","isPrimitiveValue","collectPropertyBindings","bindingIndexes","metadataParts","lowercaseTNodeAttrs","eAttrs","lowercaseName","baseVal","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","_queryNativeNodeDescendants","rootNativeNode","_addQueryMatchR3","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","getDebugNode$1","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","NG_DEBUG_PROPERTY","getDebugNodeR2__PRE_R3__","getDebugNodeR2","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bm","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_k","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_s","ɵangular_packages_core_core_t","ɵangular_packages_core_core_u","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNodeR2","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocaleCurrencyCode","getLocaleCurrencyCode","CurrencyCode","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","componentTag","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+847.sha-53c4c8d\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n            (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n        if (def) {\n            var typeName = getTypeName(type);\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + typeName + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + typeName + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /** Gets the name of a type, accounting for some cross-browser differences. */\n    function getTypeName(type) {\n        // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n        // it'll always return the name of the function itself, no matter how many other functions it\n        // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n        // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n        // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n        // the issue by converting the function to a string and parsing its name out that way via a regex.\n        if (type.hasOwnProperty('name')) {\n            return type.name;\n        }\n        var match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n        return match === null ? '' : match[1];\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n    // which will break inheriting the injectable definition from a grandparent through an\n    // undecorated parent class. We work around it by defining a fallback method which will be\n    // used to retrieve the definition. This should only be a problem in JIT mode, because in\n    // AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n    // undecorated parent is no longer supported in v10, this can safely be removed.\n    var NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Concatenates two strings with separator, allocating new strings only when necessary.\n     *\n     * @param before before string.\n     * @param separator separator string.\n     * @param after after string.\n     * @returns concatenated string.\n     */\n    function concatStringsWithSpace(before, after) {\n        return (before == null || before === '') ?\n            (after === null ? '' : after) :\n            ((after == null || after === '') ? before : before + ' ' + after);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = {};\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactoryDep(index) {\n        var msg = ngDevMode ?\n            \"This constructor is not compatible with Angular Dependency Injection because its dependency at index \" + index + \" of the parameter list is invalid.\\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\\n\\nPlease check that 1) the type for the parameter at index \" + index + \" is correct and 2) the correct Angular decorators are defined for this class and its ancestors.\" :\n            'invalid';\n        throw new Error(msg);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg, typeof actual, 'number', '===');\n        }\n    }\n    function assertString(actual, msg) {\n        if (typeof actual != 'string') {\n            throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg, actual, expected, '==');\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg, actual, expected, '!=');\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg, actual, expected, '===');\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg, actual, expected, '!==');\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg, actual, expected, '<');\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg, actual, expected, '<=');\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg, actual, expected, '>');\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg, actual, null, '==');\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg, actual, null, '!=');\n        }\n    }\n    function throwError(msg, actual, expected, comparison) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg +\n            (comparison == null ? '' : \" [Expected=> \" + expected + \" \" + comparison + \" \" + actual + \" <=Actual]\"));\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n    /**\n     * Remove item from array (Same as `Array.splice()` but faster.)\n     *\n     * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice\n     * @param index Index of element in array to remove.\n     * @param count Number of items to remove.\n     */\n    function arraySplice(array, index, count) {\n        var length = array.length - count;\n        while (index < length) {\n            array[index] = array[index + count];\n            index++;\n        }\n        while (count--) {\n            array.pop(); // shrink the array\n        }\n    }\n    /**\n     * Same as `Array.splice(index, 0, value)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value Value to add to array.\n     */\n    function arrayInsert(array, index, value) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        while (end > index) {\n            var previousEnd = end - 1;\n            array[end] = array[previousEnd];\n            end = previousEnd;\n        }\n        array[index] = value;\n    }\n    /**\n     * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n     *\n     * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n     * removed. This causes memory pressure and slows down code when most of the time we don't\n     * care about the deleted items array.\n     *\n     * https://jsperf.com/fast-array-splice (About 20x faster)\n     *\n     * @param array Array to splice.\n     * @param index Index in array where the `value` should be added.\n     * @param value1 Value to add to array.\n     * @param value2 Value to add to array.\n     */\n    function arrayInsert2(array, index, value1, value2) {\n        ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n        var end = array.length;\n        if (end == index) {\n            // inserting at the end.\n            array.push(value1, value2);\n        }\n        else if (end === 1) {\n            // corner case when we have less items in array than we have items to insert.\n            array.push(value2, array[0]);\n            array[0] = value1;\n        }\n        else {\n            end--;\n            array.push(array[end - 1], array[end]);\n            while (end > index) {\n                var previousEnd = end - 2;\n                array[end] = array[previousEnd];\n                end--;\n            }\n            array[index] = value1;\n            array[index + 1] = value2;\n        }\n    }\n    /**\n     * Insert a `value` into an `array` so that the array remains sorted.\n     *\n     * NOTE:\n     * - Duplicates are not allowed, and are ignored.\n     * - This uses binary search algorithm for fast inserts.\n     *\n     * @param array A sorted array to insert into.\n     * @param value The value to insert.\n     * @returns index of the inserted value.\n     */\n    function arrayInsertSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index < 0) {\n            // if we did not find it insert it.\n            index = ~index;\n            arrayInsert(array, index, value);\n        }\n        return index;\n    }\n    /**\n     * Remove `value` from a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to remove from.\n     * @param value The value to remove.\n     * @returns index of the removed value.\n     *   - positive index if value found and removed.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     inserted)\n     */\n    function arrayRemoveSorted(array, value) {\n        var index = arrayIndexOfSorted(array, value);\n        if (index >= 0) {\n            arraySplice(array, index, 1);\n        }\n        return index;\n    }\n    /**\n     * Get an index of an `value` in a sorted `array`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     *     located)\n     */\n    function arrayIndexOfSorted(array, value) {\n        return _arrayIndexOfSorted(array, value, 0);\n    }\n    /**\n     * Set a `value` for a `key`.\n     *\n     * @param arrayMap to modify.\n     * @param key The key to locate or create.\n     * @param value The value to set for a `key`.\n     * @returns index (always even) of where the value vas set.\n     */\n    function arrayMapSet(arrayMap, key, value) {\n        var index = arrayMapIndexOf(arrayMap, key);\n        if (index >= 0) {\n            // if we found it set it.\n            arrayMap[index | 1] = value;\n        }\n        else {\n            index = ~index;\n            arrayInsert2(arrayMap, index, key, value);\n        }\n        return index;\n    }\n    /**\n     * Retrieve a `value` for a `key` (on `undefined` if not found.)\n     *\n     * @param arrayMap to search.\n     * @param key The key to locate.\n     * @return The `value` stored at the `key` location or `undefined if not found.\n     */\n    function arrayMapGet(arrayMap, key) {\n        var index = arrayMapIndexOf(arrayMap, key);\n        if (index >= 0) {\n            // if we found it retrieve it.\n            return arrayMap[index | 1];\n        }\n        return undefined;\n    }\n    /**\n     * Retrieve a `key` index value in the array or `-1` if not found.\n     *\n     * @param arrayMap to search.\n     * @param key The key to locate.\n     * @returns index of where the key is (or should have been.)\n     *   - positive (even) index if key found.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been inserted.)\n     */\n    function arrayMapIndexOf(arrayMap, key) {\n        return _arrayIndexOfSorted(arrayMap, key, 1);\n    }\n    /**\n     * Delete a `key` (and `value`) from the `ArrayMap`.\n     *\n     * @param arrayMap to modify.\n     * @param key The key to locate or delete (if exist).\n     * @returns index of where the key was (or should have been.)\n     *   - positive (even) index if key found and deleted.\n     *   - negative index if key not found. (`~index` (even) to get the index where it should have\n     *     been.)\n     */\n    function arrayMapDelete(arrayMap, key) {\n        var index = arrayMapIndexOf(arrayMap, key);\n        if (index >= 0) {\n            // if we found it remove it.\n            arraySplice(arrayMap, index, 2);\n        }\n        return index;\n    }\n    /**\n     * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n     *\n     * NOTE:\n     * - This uses binary search algorithm for fast removals.\n     *\n     * @param array A sorted array to binary search.\n     * @param value The value to look for.\n     * @param shift grouping shift.\n     *   - `0` means look at every location\n     *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n     *         they are values.)\n     * @returns index of the value.\n     *   - positive index if value found.\n     *   - negative index if value not found. (`~index` to get the value where it should have been\n     * inserted)\n     */\n    function _arrayIndexOfSorted(array, value, shift) {\n        ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n        var start = 0;\n        var end = array.length >> shift;\n        while (end !== start) {\n            var middle = start + ((end - start) >> 1); // find the middle.\n            var current = array[middle << shift];\n            if (value === current) {\n                return (middle << shift);\n            }\n            else if (current > value) {\n                end = middle;\n            }\n            else {\n                start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n            }\n        }\n        return ~(end << shift);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            hostVars: componentDefinition.hostVars || 0,\n            hostAttrs: componentDefinition.hostAttrs || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n    function assertFirstUpdatePass(tView, errMessage) {\n        assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');\n    }\n    /**\n     * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n     * an interface, so we can't do a direct instanceof check.\n     */\n    function assertDirectiveDef(obj) {\n        if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n            throwError(\"Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.\");\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        setSelectedIndex(elementIndex);\n    }\n    function clearActiveHostElement() {\n        setSelectedIndex(-1);\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRootForHostBindings(value) {\n        var lframe = instructionState.lFrame;\n        lframe.bindingIndex = lframe.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        var contextLView = instructionState.lFrame.contextLView =\n            walkUpViews(level, instructionState.lFrame.contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the currently selected element index.\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$2 = function (hostElement, rendererType) { return getDocument(); };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$2\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64 /* AT_SIGN */;\n    }\n    /**\n     * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n     *\n     * This merge function keeps the order of attrs same.\n     *\n     * @param dst Location of where the merged `TAttributes` should end up.\n     * @param src `TAttributes` which should be appended to `dst`\n     */\n    function mergeHostAttrs(dst, src) {\n        if (src === null || src.length === 0) {\n            // do nothing\n        }\n        else if (dst === null || dst.length === 0) {\n            // We have source, but dst is empty, just make a copy.\n            dst = src.slice();\n        }\n        else {\n            var srcMarker = -1 /* ImplicitAttributes */;\n            for (var i = 0; i < src.length; i++) {\n                var item = src[i];\n                if (typeof item === 'number') {\n                    srcMarker = item;\n                }\n                else {\n                    if (srcMarker === 0 /* NamespaceURI */) {\n                        // Case where we need to consume `key1`, `key2`, `value` items.\n                    }\n                    else if (srcMarker === -1 /* ImplicitAttributes */ ||\n                        srcMarker === 2 /* Styles */) {\n                        // Case where we have to consume `key1` and `value` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, src[++i]);\n                    }\n                    else {\n                        // Case where we have to consume `key1` only.\n                        mergeHostAttribute(dst, srcMarker, item, null, null);\n                    }\n                }\n            }\n        }\n        return dst;\n    }\n    /**\n     * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n     *\n     * @param dst `TAttributes` to append to.\n     * @param marker Region where the `key`/`value` should be added.\n     * @param key1 Key to add to `TAttributes`\n     * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n     * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n     */\n    function mergeHostAttribute(dst, marker, key1, key2, value) {\n        var i = 0;\n        // Assume that new markers will be inserted at the end.\n        var markerInsertPosition = dst.length;\n        // scan until correct type.\n        if (marker === -1 /* ImplicitAttributes */) {\n            markerInsertPosition = -1;\n        }\n        else {\n            while (i < dst.length) {\n                var dstValue = dst[i++];\n                if (typeof dstValue === 'number') {\n                    if (dstValue === marker) {\n                        markerInsertPosition = -1;\n                        break;\n                    }\n                    else if (dstValue > marker) {\n                        // We need to save this as we want the markers to be inserted in specific order.\n                        markerInsertPosition = i - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        // search until you find place of insertion\n        while (i < dst.length) {\n            var item = dst[i];\n            if (typeof item === 'number') {\n                // since `i` started as the index after the marker, we did not find it if we are at the next\n                // marker\n                break;\n            }\n            else if (item === key1) {\n                // We already have same token\n                if (key2 === null) {\n                    if (value !== null) {\n                        dst[i + 1] = value;\n                    }\n                    return;\n                }\n                else if (key2 === dst[i + 1]) {\n                    dst[i + 2] = value;\n                    return;\n                }\n            }\n            // Increment counter.\n            i++;\n            if (key2 !== null)\n                i++;\n            if (value !== null)\n                i++;\n        }\n        // insert at location.\n        if (markerInsertPosition !== -1) {\n            dst.splice(markerInsertPosition, 0, marker);\n            i = markerInsertPosition + 1;\n        }\n        dst.splice(i++, 0, key1);\n        if (key2 !== null) {\n            dst.splice(i++, 0, key2);\n        }\n        if (value !== null) {\n            dst.splice(i++, 0, value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$3 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$3)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return tNode.classes;\n        }\n        if (attrNameToInject === 'style') {\n            return tNode.styles;\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(lView, tView, index, tNode) {\n        var value = lView[index];\n        var tData = tView.data;\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n                // This code path is hit for both directives and providers.\n                // For perf reasons, we want to avoid searching for hooks on providers.\n                // It does no harm to try (the hooks just won't exist), but the extra\n                // checks are unnecessary and this is a hot path. So we check to see\n                // if the index of the dependency is in the directive range for this\n                // tNode. If it's not, we know it's a provider and skip hook registration.\n                if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                    ngDevMode && assertDirectiveDef(tData[index]);\n                    registerPreOrderHooks(index, tData[index], tView);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            var inertBodyElement = this.inertDocument.body;\n            if (inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(inertBodyElement);\n            }\n            inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (inertBodyElement.querySelector && !inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (inertBodyElement.querySelector && inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n            // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n            // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n            // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n            // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n            // down the line. This has been worked around by creating a new inert `body` and using it as\n            // the root node in which we insert the HTML.\n            var inertBody = this.inertDocument.createElement('body');\n            inertBody.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(inertBody);\n            }\n            return inertBody;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:attr|calc|var)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        if (value === undefined && mode === undefined) {\n            // This is a workaround for the fact that `StyleSanitizeFn` should not exist once PR#34480\n            // lands. For now the `StyleSanitizeFn` and should act like `(value: any) => string` as a\n            // work around.\n            return ɵɵsanitizeStyle(prop);\n        }\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = stylePropNeedsSanitization(prop);\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : unwrapSafeValue(value);\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function stylePropNeedsSanitization(prop) {\n        return prop === 'background-image' || prop === 'backgroundImage' || prop === 'background' ||\n            prop === 'border-image' || prop === 'borderImage' || prop === 'border-image-source' ||\n            prop === 'borderImageSource' || prop === 'filter' || prop === 'list-style' ||\n            prop === 'listStyle' || prop === 'list-style-image' || prop === 'listStyleImage' ||\n            prop === 'clip-path' || prop === 'clipPath';\n    }\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n        var field = propName ? \" for '\" + propName + \"'\" : '';\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value\" + field + \": '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook?\";\n        }\n        // TODO: include debug context, see `viewDebugError` function in\n        // `packages/core/src/view/errors.ts` for reference.\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(msg);\n    }\n    function constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n        var _a = __read(meta.split(INTERPOLATION_DELIMITER)), propName = _a[0], prefix = _a[1], chunks = _a.slice(2);\n        var oldValue = prefix, newValue = prefix;\n        for (var i = 0; i < chunks.length; i++) {\n            var slotIdx = rootIndex + i;\n            oldValue += \"\" + lView[slotIdx] + chunks[i];\n            newValue += \"\" + (slotIdx === expressionIndex ? changedValue : lView[slotIdx]) + chunks[i];\n        }\n        return { propName: propName, oldValue: oldValue, newValue: newValue };\n    }\n    /**\n     * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n     * - property name (for property bindings or interpolations)\n     * - old and new values, enriched using information from metadata\n     *\n     * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n     * function description.\n     */\n    function getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n        var tData = lView[TVIEW].data;\n        var metadata = tData[bindingIndex];\n        if (typeof metadata === 'string') {\n            // metadata for property interpolation\n            if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n                return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n            }\n            // metadata for property binding\n            return { propName: metadata, oldValue: oldValue, newValue: newValue };\n        }\n        // metadata is not available for this expression, check if this expression is a part of the\n        // property interpolation by going from the current binding index left and look for a string that\n        // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n        // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n        if (metadata === null) {\n            var idx = bindingIndex - 1;\n            while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n                idx--;\n            }\n            var meta = tData[idx];\n            if (typeof meta === 'string') {\n                var matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n                // first interpolation delimiter separates property name from interpolation parts (in case of\n                // property interpolations), so we subtract one from total number of found delimiters\n                if (matches && (matches.length - 1) > bindingIndex - idx) {\n                    return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n                }\n            }\n        }\n        return { propName: undefined, oldValue: oldValue, newValue: newValue };\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n     *\n     * ```\n     * <div my-dir [class]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    /**\n     * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n     *\n     * ```\n     * <div my-dir [style]=\"exp\"></div>\n     * ```\n     * and\n     * ```\n     * @Directive({\n     * })\n     * class MyDirective {\n     *   @Input()\n     *   class: string;\n     * }\n     * ```\n     *\n     * In the above case it is necessary to write the reconciled styling information into the\n     * directive's input.\n     *\n     * @param tNode\n     */\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n     *\n     * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n     *\n     * @param className A string containing classes (whitespace separated)\n     * @param classToSearch A class name to locate\n     * @param startingIndex Starting location of search\n     * @returns an index of the located class (or -1 if not found)\n     */\n    function classIndexOf(className, classToSearch, startingIndex) {\n        ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n        var end = className.length;\n        while (true) {\n            var foundIndex = className.indexOf(classToSearch, startingIndex);\n            if (foundIndex === -1)\n                return foundIndex;\n            if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32 /* SPACE */) {\n                // Ensure that it has leading whitespace\n                var length_1 = classToSearch.length;\n                if (foundIndex + length_1 === end ||\n                    className.charCodeAt(foundIndex + length_1) <= 32 /* SPACE */) {\n                    // Ensure that it has trailing whitespace\n                    return foundIndex;\n                }\n            }\n            // False positive, keep searching from where we left off.\n            startingIndex = foundIndex + 1;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    /**\n     * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n     *\n     * @param attrs `TAttributes` to search through.\n     * @param cssClassToMatch class to match (lowercase)\n     * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n     *    addition to the `AttributeMarker.Classes`.\n     */\n    function isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {\n        // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n        // It is strange to me that sometimes the class information comes in form of `class` attribute\n        // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n        // if that is the right behavior.\n        ngDevMode &&\n            assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n        var i = 0;\n        while (i < attrs.length) {\n            var item = attrs[i++];\n            if (isProjectionMode && item === 'class') {\n                item = attrs[i];\n                if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n                    return true;\n                }\n            }\n            else if (item === 1 /* Classes */) {\n                // We found the classes section. Start searching for the class.\n                while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n                    // while we have strings\n                    if (item.toLowerCase() === cssClassToMatch)\n                        return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.attrs !== null) {\n                    if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    function maybeWrapInNotSelector(isNegativeMode, chunk) {\n        return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n    }\n    function stringifyCSSSelector(selector) {\n        var result = selector[0];\n        var i = 1;\n        var mode = 2 /* ATTRIBUTE */;\n        var currentChunk = '';\n        var isNegativeMode = false;\n        while (i < selector.length) {\n            var valueOrMarker = selector[i];\n            if (typeof valueOrMarker === 'string') {\n                if (mode & 2 /* ATTRIBUTE */) {\n                    var attrValue = selector[++i];\n                    currentChunk +=\n                        '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n                }\n                else if (mode & 8 /* CLASS */) {\n                    currentChunk += '.' + valueOrMarker;\n                }\n                else if (mode & 4 /* ELEMENT */) {\n                    currentChunk += ' ' + valueOrMarker;\n                }\n            }\n            else {\n                //\n                // Append current chunk to the final result in case we come across SelectorFlag, which\n                // indicates that the previous section of a selector is over. We need to accumulate content\n                // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n                // ```\n                //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n                // ```\n                // should be transformed to `.classA :not(.classB .classC)`.\n                //\n                // Note: for negative selector part, we accumulate content between flags until we find the\n                // next negative flag. This is needed to support a case where `:not()` rule contains more than\n                // one chunk, e.g. the following selector:\n                // ```\n                //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n                // ```\n                // should be stringified to `:not(p.foo) :not(.bar)`\n                //\n                if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n                    result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n                    currentChunk = '';\n                }\n                mode = valueOrMarker;\n                // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n                // mode is maintained for remaining chunks of a selector.\n                isNegativeMode = isNegativeMode || !isPositive(mode);\n            }\n            i++;\n        }\n        if (currentChunk !== '') {\n            result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n        }\n        return result;\n    }\n    /**\n     * Generates string representation of CSS selector in parsed form.\n     *\n     * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n     * additional parsing at runtime (for example, for directive matching). However in some cases (for\n     * example, while bootstrapping a component), a string version of the selector is required to query\n     * for the host element on the page. This function takes the parsed form of a selector and returns\n     * its string representation.\n     *\n     * @param selectorList selector in parsed form\n     * @returns string representation of a given selector\n     */\n    function stringifyCSSSelectorList(selectorList) {\n        return selectorList.map(stringifyCSSSelector).join(',');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = (typeof ngDevMode === 'undefined' || ngDevMode) ? { __brand__: 'NO_CHANGE' } : {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        // TODO(misko): Remove this function as it is no longer being used.\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    function toTStylingRange(prev, next) {\n        return (prev << 18 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangePrev(tStylingRange) {\n        return tStylingRange >> 18 /* PREV_SHIFT */;\n    }\n    function getTStylingRangePrevDuplicate(tStylingRange) {\n        return (tStylingRange & 2 /* PREV_DUPLICATE */) ==\n            2 /* PREV_DUPLICATE */;\n    }\n    function setTStylingRangePrev(tStylingRange, previous) {\n        return ((tStylingRange & ~4294705152 /* PREV_MASK */) |\n            (previous << 18 /* PREV_SHIFT */));\n    }\n    function setTStylingRangePrevDuplicate(tStylingRange) {\n        return (tStylingRange | 2 /* PREV_DUPLICATE */);\n    }\n    function getTStylingRangeNext(tStylingRange) {\n        return (tStylingRange & 16380 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;\n    }\n    function setTStylingRangeNext(tStylingRange, next) {\n        return ((tStylingRange & ~16380 /* NEXT_MASK */) | //\n            next << 2 /* NEXT_SHIFT */);\n    }\n    function getTStylingRangeNextDuplicate(tStylingRange) {\n        return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===\n            1 /* NEXT_DUPLICATE */;\n    }\n    function setTStylingRangeNextDuplicate(tStylingRange) {\n        return (tStylingRange | 1 /* NEXT_DUPLICATE */);\n    }\n    function getTStylingRangeTail(tStylingRange) {\n        var next = getTStylingRangeNext(tStylingRange);\n        return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNode = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        mergedAttrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        stylesMap, //\n        classes, //\n        classesMap, //\n        classBindings, //\n        styleBindings) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.mergedAttrs = mergedAttrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.stylesMap = stylesMap;\n            this.classes = classes;\n            this.classesMap = classesMap;\n            this.classBindings = classBindings;\n            this.styleBindings = styleBindings;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"styleBindings_\", {\n            get: function () { return toDebugStyleBinding(this, false); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"classBindings_\", {\n            get: function () { return toDebugStyleBinding(this, true); },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TNodeDebug = TNode;\n    function toDebugStyleBinding(tNode, isClassBased) {\n        var tData = tNode.tView_.data;\n        var bindings = [];\n        var range = isClassBased ? tNode.classBindings : tNode.styleBindings;\n        var prev = getTStylingRangePrev(range);\n        var next = getTStylingRangeNext(range);\n        var isTemplate = next !== 0;\n        var cursor = isTemplate ? next : prev;\n        while (cursor !== 0) {\n            var itemKey = tData[cursor];\n            var itemRange = tData[cursor + 1];\n            bindings.unshift({\n                key: itemKey,\n                index: cursor,\n                isTemplate: isTemplate,\n                prevDuplicate: getTStylingRangePrevDuplicate(itemRange),\n                nextDuplicate: getTStylingRangeNextDuplicate(itemRange),\n                nextIndex: getTStylingRangeNext(itemRange),\n                prevIndex: getTStylingRangePrev(itemRange),\n            });\n            if (cursor === prev)\n                isTemplate = false;\n            cursor = getTStylingRangePrev(itemRange);\n        }\n        bindings.unshift(isClassBased ? tNode.classes : tNode.styles);\n        return bindings;\n    }\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        return {\n            html: toHtml(native),\n            native: native,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return getLContainerActiveIndex(this._raw_lContainer); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    var ɵ0$4 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$4)();\n    /**\n     * Process the `TVIew.expandoInstructions`. (Execute the `hostBindings`.)\n     *\n     * @param tView `TView` containing the `expandoInstructions`\n     * @param lView `LView` associated with the `TView`\n     */\n    function setHostBindingsByExecutingExpandoInstructions(tView, lView) {\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` is not associated with the `TView`!');\n        try {\n            var expandoInstructions = tView.expandoInstructions;\n            if (expandoInstructions !== null) {\n                var bindingRootIndex = tView.expandoStartIndex;\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                // TODO(misko): PERF It is possible to get here with `TVIew.expandoInstructions` containing no\n                // functions to execute. This is wasteful as there is no work to be done, but we still need\n                // to iterate over the instructions.\n                // In example of this is in this test: `host_binding_spec.ts`\n                // `fit('should not cause problems if detectChanges is called when a property updates', ...`\n                // In the above test we get here with expando [0, 0, 1] which requires a lot of processing but\n                // there is no function to execute.\n                for (var i = 0; i < expandoInstructions.length; i++) {\n                    var instruction = expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce\n                            // `-0` which requires non standard math arithmetic and it can prevent VM optimizations.\n                            // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n                            // TODO(misko): PERF This should be refactored to use `~instruction` as that does not\n                            // suffer from `-0` and it is faster/more compact.\n                            currentElementIndex = 0 - instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            setBindingRootForHostBindings(bindingRootIndex);\n                            var hostCtx = lView[currentDirectiveIndex];\n                            instruction(2 /* Update */, hostCtx);\n                        }\n                        // TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is\n                        // sub-optimal. The implications are that if we have a lot of directives but none of them\n                        // have host bindings we nevertheless need to iterate over the expando instructions to\n                        // update the counter. It would be much better if we could encode the\n                        // `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to\n                        // iterate over those directives which actually have `hostBindings`.\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            clearActiveHostElement();\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n        lView[DECLARATION_COMPONENT_VIEW] =\n            tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        var flags = lView[FLAGS];\n        if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n            return;\n        enterView(lView, lView[T_HOST]);\n        var checkNoChangesMode = getCheckNoChangesMode();\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindingsByExecutingExpandoInstructions(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n            if (tView.firstUpdatePass === true) {\n                // We need to make sure that we only flip the flag on successful `refreshView` only\n                // Don't do this in `finally` block.\n                // If we did this in `finally` block then an exception could block the execution of styling\n                // instructions which in turn would be unable to insert themselves into the styling linked\n                // list. The result of this would be that if the exception would not be throw on subsequent CD\n                // the styling would be unable to process it data and reflect to the DOM.\n                tView.firstUpdatePass = false;\n            }\n            // Do not reset the dirty state when running in check no changes mode. We don't want components\n            // to behave differently depending on whether check no changes is enabled or not. For example:\n            // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n            // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n            // no changes cycle, the component would be not be dirty for the next update pass. This would\n            // be different in production mode where the component dirty state is not reset.\n            if (!checkNoChangesMode) {\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            }\n        }\n        finally {\n            leaveView();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            clearActiveHostElement();\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(renderer, elementOrSelector, encapsulation) {\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeDebug(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // mergedAttrs\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: string|null\n        undefined, // stylesMap: string|null\n        null, // classes: string|null\n        undefined, // classesMap: string|null\n        0, // classBindings: TStylingRange;\n        0) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                mergedAttrs: null,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: null,\n                outputs: null,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                stylesMap: undefined,\n                classes: null,\n                classesMap: undefined,\n                classBindings: 0,\n                styleBindings: 0,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, propName, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+1]\n             */\n            for (var i = 0; i < dataValue.length; i += 2) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        if (matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName)) {\n            return true;\n        }\n        // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n        // need to account for both here, while being careful for `typeof null` also returning 'object'.\n        return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        var hasDirectives = false;\n        if (getBindingsEnabled()) {\n            var directiveDefs = findDirectiveDefMatches(tView, lView, tNode);\n            var exportsMap = localRefs === null ? null : { '': -1 };\n            if (directiveDefs !== null) {\n                var totalDirectiveHostVars = 0;\n                hasDirectives = true;\n                initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n                // When the same token is provided by several directives on the same node, some rules apply in\n                // the viewEngine:\n                // - viewProviders have priority over providers\n                // - the last directive in NgModule.declarations has priority over the previous one\n                // So to match these rules, the order in which providers are added in the arrays is very\n                // important.\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    if (def.providersResolver)\n                        def.providersResolver(def);\n                }\n                generateExpandoInstructionBlock(tView, tNode, directiveDefs.length);\n                var preOrderHooksFound = false;\n                var preOrderCheckHooksFound = false;\n                for (var i = 0; i < directiveDefs.length; i++) {\n                    var def = directiveDefs[i];\n                    // Merge the attrs in the order of matches. This assumes that the first directive is the\n                    // component itself, so that the component has the least priority.\n                    tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n                    baseResolveDirective(tView, lView, def);\n                    saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                    if (def.contentQueries !== null)\n                        tNode.flags |= 8 /* hasContentQuery */;\n                    if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n                        tNode.flags |= 128 /* hasHostBindings */;\n                    // Only push a node index into the preOrderHooks array if this is the first\n                    // pre-order hook found on this node.\n                    if (!preOrderHooksFound && (def.onChanges || def.onInit || def.doCheck)) {\n                        // We will push the actual hook function into this array later during dir instantiation.\n                        // We cannot do it now because we must ensure hooks are registered in the same\n                        // order that directives are created (i.e. injection order).\n                        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderHooksFound = true;\n                    }\n                    if (!preOrderCheckHooksFound && (def.onChanges || def.doCheck)) {\n                        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(tNode.index - HEADER_OFFSET);\n                        preOrderCheckHooksFound = true;\n                    }\n                    addHostBindingsToExpandoInstructions(tView, def);\n                    totalDirectiveHostVars += def.hostVars;\n                }\n                initializeInputAndOutputAliases(tView, tNode);\n                growHostVarsSpace(tView, lView, totalDirectiveHostVars);\n            }\n            if (exportsMap)\n                cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        }\n        // Merge the template attrs last so that they have the highest priority.\n        tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n        return hasDirectives;\n    }\n    /**\n     * Add `hostBindings` to the `TView.expandoInstructions`.\n     *\n     * @param tView `TView` to which the `hostBindings` should be added.\n     * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n     */\n    function addHostBindingsToExpandoInstructions(tView, def) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var expando = tView.expandoInstructions;\n        // TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is\n        // suboptimal for performance. `def.hostBindings` may be null,\n        // but we still need to push null to the array as a placeholder\n        // to ensure the directive counter is incremented (so host\n        // binding functions always line up with the corrective directive).\n        // This is suboptimal for performance. See `currentDirectiveIndex`\n        //  comment in `setHostBindingsByExecutingExpandoInstructions` for more\n        // details.  expando.push(def.hostBindings);\n        expando.push(def.hostBindings);\n        var hostVars = def.hostVars;\n        if (hostVars !== 0) {\n            expando.push(def.hostVars);\n        }\n    }\n    /**\n     * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.\n     *\n     * To support locality we don't know ahead of time how many `hostVars` of the containing directives\n     * we need to allocate. For this reason we allow growing these data structures as we discover more\n     * directives to accommodate them.\n     *\n     * @param tView `TView` which needs to be grown.\n     * @param lView `LView` which needs to be grown.\n     * @param count Size by which we need to grow the data structures.\n     */\n    function growHostVarsSpace(tView, lView, count) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n        for (var i = 0; i < count; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(lView, tView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = lView[i];\n                if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n                    invokeHostBindingsInCreationMode(def, directive);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            clearActiveHostElement();\n        }\n    }\n    /**\n     * Invoke the host bindings in creation mode.\n     *\n     * @param def `DirectiveDef` which may contain the `hostBindings` function.\n     * @param directive Instance of directive.\n     */\n    function invokeHostBindingsInCreationMode(def, directive) {\n        if (def.hostBindings !== null) {\n            def.hostBindings(1 /* Create */, directive);\n        }\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n        // requires non standard math arithmetic and it can prevent VM optimizations.\n        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n        var elementIndex = HEADER_OFFSET - tNode.index;\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveDefMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (isComponentDef(def))\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initTNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    if (viewAttachedToChangeDetector(embeddedLView)) {\n                        refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                    }\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedLView, movedTView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, publicName, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            if (def.setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    var rNodeOrLContainer = lView[tNode.index];\n                    if (isLContainer(rNodeOrLContainer)) {\n                        return getBeforeNodeForView(-1, rNodeOrLContainer);\n                    }\n                    else {\n                        return unwrapRNode(rNodeOrLContainer);\n                    }\n                }\n            }\n            else {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = lView[DECLARATION_COMPONENT_VIEW];\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * Writes class/style to element.\n     *\n     * @param renderer Renderer to use.\n     * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n     * @param rNode The Node to write to.\n     * @param prop Property to write to. This would be the class/style name.\n     * @param value Value to wiret. If `null`/`undefined`/`false` this is consider a remove (set/add\n     * otherwise).\n     */\n    function applyStyling(renderer, isClassBased, rNode, prop, value) {\n        var isProcedural = isProceduralRenderer(renderer);\n        if (isClassBased) {\n            if (!value) { // We actually want JS falseness here\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProcedural) {\n                    renderer.removeClass(rNode, prop);\n                }\n                else {\n                    rNode.classList.remove(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProcedural) {\n                    renderer.addClass(rNode, prop);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');\n                    rNode.classList.add(prop);\n                }\n            }\n        }\n        else {\n            // TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in\n            // different order which causes failures. Using direct constant as workaround for now.\n            var flags = prop.indexOf('-') == -1 ? undefined : 2 /* RendererStyleFlags2.DashCase */;\n            if (value === null || value === undefined) {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProcedural) {\n                    renderer.removeStyle(rNode, prop, flags);\n                }\n                else {\n                    rNode.style.removeProperty(prop);\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProcedural) {\n                    renderer.setStyle(rNode, prop, value, flags);\n                }\n                else {\n                    ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');\n                    rNode.style.setProperty(prop, value);\n                }\n            }\n        }\n    }\n    /**\n     * Write `cssText` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectStyle(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, 'style', newValue);\n        }\n        else {\n            element.style.cssText = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetStyle++;\n    }\n    /**\n     * Write `className` to `RElement`.\n     *\n     * This function does direct write without any reconciliation. Used for writing initial values, so\n     * that static styling values do not pull in the style parser.\n     *\n     * @param renderer Renderer to use\n     * @param element The element which needs to be updated.\n     * @param newValue The new class list to write.\n     */\n    function writeDirectClass(renderer, element, newValue) {\n        ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n        if (isProceduralRenderer(renderer)) {\n            if (newValue === '') {\n                // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n                renderer.removeAttribute(element, 'class');\n            }\n            else {\n                renderer.setAttribute(element, 'class', newValue);\n            }\n        }\n        else {\n            element.className = newValue;\n        }\n        ngDevMode && ngDevMode.rendererSetClassName++;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = lView[DECLARATION_COMPONENT_VIEW];\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef, _super);\n                function ElementRef() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef, _super);\n                function TemplateRef(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef, _super);\n                function ViewContainerRef(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef.prototype.insert = function (viewRef, index) {\n                    var lView = viewRef._lView;\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, detach it first so we clean up references appropriately.\n                        var prevIdx = this.indexOf(viewRef);\n                        // A view might be attached either to this or a different container. The `prevIdx` for\n                        // those cases will be:\n                        // equal to -1 for views attached to this ViewContainerRef\n                        // >= 0 for views attached to a different ViewContainerRef\n                        if (prevIdx !== -1) {\n                            this.detach(prevIdx);\n                        }\n                        else {\n                            var prevLContainer = lView[PARENT];\n                            ngDevMode && assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                            // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                            // LView (nor anywhere else).\n                            var prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                            prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                        }\n                    }\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    return this.insert(viewRef, newIndex);\n                };\n                ViewContainerRef.prototype.indexOf = function (viewRef) {\n                    var viewRefsArr = this._lContainer[VIEW_REFS];\n                    return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n                };\n                ViewContainerRef.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, \"ViewRef index must be positive, got \" + index);\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            // The comment node in question is already part of the DOM structure so we don't need to append\n            // it again.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n                // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n                // this case we can't use TView / TNode data structures to insert container's marker node\n                // (both a parent of a comment node and the comment node itself are not part of any view). In\n                // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n                // node.\n                if (isRootView(hostView)) {\n                    var renderer = hostView[RENDERER];\n                    var hostNative = getNativeByTNode(hostTNode, hostView);\n                    var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                    nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n                }\n                else {\n                    appendChild(commentNode, hostTNode, hostView);\n                }\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep) && dep.length > 0) {\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                var proto = Object.getPrototypeOf(param);\n                if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n            meta.token = undefined;\n            meta.resolved = R3ResolvedDependencyType.Invalid;\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n            // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n            // which will break inheriting the injectable definition from a grandparent through an\n            // undecorated parent class. We work around it by defining a method which should be used\n            // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n            // seems to have a workaround for static properties. When inheriting from an undecorated\n            // parent is no longer supported in v10, this can safely be removed.\n            if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n                type[NG_PROV_DEF_FALLBACK] = function () { return type[NG_PROV_DEF]; };\n            }\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var ɵ0$6 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$7 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$8 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface. Injectors are configured\n     * with [providers](guide/glossary#provider) that associate\n     * dependencies of various types with [injection tokens](guide/glossary#di-token).\n     *\n     * @see [\"DI Providers\"](guide/dependency-injection-providers).\n     * @see `StaticProvider`\n     *\n     * @usageNotes\n     *\n     *  The following example creates a service injector instance.\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     *\n     * ### Usage example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var ɵ0$9 = IDENT;\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var ɵ1$1 = MULTI_PROVIDER_FN;\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = {};\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$a = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\n    var ɵ1$2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Compute the static styling (class/style) from `TAttributes`.\n     *\n     * This function should be called during `firstCreatePass` only.\n     *\n     * @param tNode The `TNode` into which the styling information should be loaded.\n     * @param attrs `TAttributes` containing the styling information.\n     */\n    function computeStaticStyling(tNode, attrs) {\n        ngDevMode && assertFirstCreatePass(getLView()[TVIEW], 'Expecting to be called in first template pass only');\n        var styles = tNode.styles;\n        var classes = tNode.classes;\n        var mode = 0;\n        for (var i = 0; i < attrs.length; i++) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                mode = value;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = concatStringsWithSpace(classes, value);\n            }\n            else if (mode == 2 /* Styles */) {\n                var style = value;\n                var styleValue = attrs[++i];\n                styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n            }\n        }\n        styles !== null && (tNode.styles = styles);\n        classes !== null && (tNode.classes = classes);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isIterable(obj) {\n        return obj !== null && typeof obj === 'object' && obj[getSymbolIterator()] !== undefined;\n    }\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /**\n     * Updates binding if changed, then returns whether it was updated.\n     *\n     * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n     * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n     * behavior.\n     *\n     * @param lView current `LView`\n     * @param bindingIndex The binding in the `LView` to check\n     * @param value New value to check against `lView[bindingIndex]`\n     * @returns `true` if the bindings has changed. (Throws if binding has changed during\n     *          `CheckNoChangesMode`)\n     */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    var details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n                }\n                // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n                // For this reason we exit as if no change. The early exit is needed to prevent the changed\n                // value to be written into `LView` (If we would write the new value that we would not see it\n                // as change on next CD.)\n                return false;\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, name, value, lView, sanitizer, namespace);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + name, bindingIndex);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolatedValue, lView, sanitizer, namespace);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementAttributeInternal(nodeIndex, attrName, interpolated, lView, sanitizer, namespace);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, 'attr.' + attrName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    function templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n        resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        registerPostOrderHooks(tView, tNode);\n        var embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n        var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n        embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n        embeddedTView.node = embeddedTViewNode;\n        if (tView.queries !== null) {\n            tView.queries.template(tView, tNode);\n            embeddedTView.queries = tView.queries.embeddedTView(tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.firstCreatePass ?\n            templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, false);\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n     * directive input.\n     */\n    function setDirectiveInputsWhichShadowsStyling(tNode, lView, value, isClassBased) {\n        var inputs = tNode.inputs;\n        var property = isClassBased ? 'class' : 'style';\n        // We support both 'class' and `className` hence the fallback.\n        var stylingInputs = inputs[property] || (isClassBased && inputs['className']);\n        setInputsForProperty(lView, stylingInputs, property, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        var hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n        ngDevMode && warnAboutUnknownElement(lView, native, tNode, hasDirectives);\n        if (tNode.mergedAttrs !== null) {\n            computeStaticStyling(tNode, tNode.mergedAttrs);\n        }\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = HEADER_OFFSET + index;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var renderer = lView[RENDERER];\n        var native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n        var tNode = tView.firstCreatePass ?\n            elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        var mergedAttrs = tNode.mergedAttrs;\n        if (mergedAttrs !== null) {\n            setUpAttributes(renderer, native, mergedAttrs);\n        }\n        var classes = tNode.classes;\n        if (classes !== null) {\n            writeDirectClass(renderer, native, classes);\n        }\n        var styles = tNode.styles;\n        if (styles !== null) {\n            writeDirectStyle(renderer, native, styles);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex !== null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (tNode.classes !== null && hasClassInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tNode, lView, tNode.classes, true);\n        }\n        if (tNode.styles !== null && hasStyleInput(tNode)) {\n            setDirectiveInputsWhichShadowsStyling(tNode, lView, tNode.styles, false);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    function warnAboutUnknownElement(hostView, element, tNode, hasDirectives) {\n        var schemas = hostView[TVIEW].schemas;\n        // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n        // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n        // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n        // execute the check below.\n        if (schemas === null)\n            return;\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = \n            // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n            // because while most browsers return 'function', IE returns 'object'.\n            (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n                element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var warning = \"'\" + tagName + \"' is not a known element:\\n\";\n                warning +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    warning +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    warning +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                console.warn(warning);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n        ngDevMode && ngDevMode.firstCreatePass++;\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n        // While ng-container doesn't necessarily support styling, we use the style context to identify\n        // and execute directives on the ng-container.\n        if (attrs !== null) {\n            computeStaticStyling(tNode, attrs);\n        }\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        resolveDirectives(tView, lView, tNode, localRefs);\n        if (tView.queries !== null) {\n            tView.queries.elementStart(tView, tNode);\n        }\n        return tNode;\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        var tNode = tView.firstCreatePass ?\n            elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n            tView.data[adjustedIndex];\n        setPreviousOrParentTNode(tNode, true);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefsIndex != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n        // native listener or a directive output on this element. As such we we know that we will have to\n        // register a listener and store its cleanup function on LView.\n        var lCleanup = getCleanup(lView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                for (var i = 0; i < propsLength; i += 2) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 1];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ$1 = {};\n    var EMPTY_ARRAY$3 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ$1);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$3);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\n    var parserState = {\n        textEnd: 0,\n        key: 0,\n        keyEnd: 0,\n        value: 0,\n        valueEnd: 0,\n    };\n    /**\n     * Retrieves the last parsed `key` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedKey(text) {\n        return text.substring(parserState.key, parserState.keyEnd);\n    }\n    /**\n     * Retrieves the last parsed `value` of style.\n     * @param text the text to substring the key from.\n     */\n    function getLastParsedValue(text) {\n        return text.substring(parserState.value, parserState.valueEnd);\n    }\n    /**\n     * Initializes `className` string for parsing and parses the first token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     * @param text `className` to parse\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassName(text) {\n        resetParserState(text);\n        return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses next `className` token.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n     *   const key = getLastParsedKey();\n     *   ...\n     * }\n     * ```\n     *\n     * @param text `className` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseClassNameNext` should resume.\n     */\n    function parseClassNameNext(text, index) {\n        var end = parserState.textEnd;\n        if (end === index) {\n            return -1;\n        }\n        index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n        return consumeWhitespace(text, index, end);\n    }\n    /**\n     * Initializes `cssText` string for parsing and parses the first key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     * ```\n     * @param text `cssText` to parse\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyle(text) {\n        resetParserState(text);\n        return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n    }\n    /**\n     * Parses the next `cssText` key/values.\n     *\n     * This function is intended to be used in this format:\n     * ```\n     * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n     *   const key = getLastParsedKey();\n     *   const value = getLastParsedValue();\n     *   ...\n     * }\n     *\n     * @param text `cssText` to parse\n     * @param index where the parsing should resume.\n     * @returns index where the next invocation of `parseStyleNext` should resume.\n     */\n    function parseStyleNext(text, startIndex) {\n        var end = parserState.textEnd;\n        var index = parserState.key = consumeWhitespace(text, startIndex, end);\n        if (end === index) {\n            // we reached an end so just quit\n            return -1;\n        }\n        index = parserState.keyEnd = consumeStyleKey(text, index, end);\n        index = consumeSeparator(text, index, end, 58 /* COLON */);\n        index = parserState.value = consumeWhitespace(text, index, end);\n        index = parserState.valueEnd = consumeStyleValue(text, index, end);\n        return consumeSeparator(text, index, end, 59 /* SEMI_COLON */);\n    }\n    /**\n     * Reset the global state of the styling parser.\n     * @param text The styling text to parse.\n     */\n    function resetParserState(text) {\n        parserState.key = 0;\n        parserState.keyEnd = 0;\n        parserState.value = 0;\n        parserState.valueEnd = 0;\n        parserState.textEnd = text.length;\n    }\n    /**\n     * Returns index of next non-whitespace character.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n     *          that location.)\n     */\n    function consumeWhitespace(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Returns index of last char in class token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last char in class token.\n     */\n    function consumeClassToken(text, startIndex, endIndex) {\n        while (startIndex < endIndex && text.charCodeAt(startIndex) > 32 /* SPACE */) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all of the characters belonging to style key and token.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style key character.\n     */\n    function consumeStyleKey(text, startIndex, endIndex) {\n        var ch;\n        while (startIndex < endIndex &&\n            ((ch = text.charCodeAt(startIndex)) === 45 /* DASH */ || ch === 95 /* UNDERSCORE */ ||\n                ((ch & -33 /* UPPER_CASE */) >= 65 /* A */ && (ch & -33 /* UPPER_CASE */) <= 90 /* Z */))) {\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes all whitespace and the separator `:` after the style key.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after separator and surrounding whitespace.\n     */\n    function consumeSeparator(text, startIndex, endIndex, separator) {\n        startIndex = consumeWhitespace(text, startIndex, endIndex);\n        if (startIndex < endIndex) {\n            if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n                malformedStyleError(text, String.fromCharCode(separator), startIndex);\n            }\n            startIndex++;\n        }\n        return startIndex;\n    }\n    /**\n     * Consumes style value honoring `url()` and `\"\"` text.\n     *\n     * @param text Text to scan\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after last style value character.\n    */\n    function consumeStyleValue(text, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var ch2 = -1; // 2nd previous character\n        var ch3 = -1; // 3rd previous character\n        var i = startIndex;\n        var lastChIndex = i;\n        while (i < endIndex) {\n            var ch = text.charCodeAt(i++);\n            if (ch === 59 /* SEMI_COLON */) {\n                return lastChIndex;\n            }\n            else if (ch === 34 /* DOUBLE_QUOTE */ || ch === 39 /* SINGLE_QUOTE */) {\n                lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n            }\n            else if (startIndex ===\n                i - 4 && // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n                ch3 === 85 /* U */ &&\n                ch2 === 82 /* R */ && ch1 === 76 /* L */ && ch === 40 /* OPEN_PAREN */) {\n                lastChIndex = i = consumeQuotedText(text, 41 /* CLOSE_PAREN */, i, endIndex);\n            }\n            else if (ch > 32 /* SPACE */) {\n                // if we have a non-whitespace character then capture its location\n                lastChIndex = i;\n            }\n            ch3 = ch2;\n            ch2 = ch1;\n            ch1 = ch & -33 /* UPPER_CASE */;\n        }\n        return lastChIndex;\n    }\n    /**\n     * Consumes all of the quoted characters.\n     *\n     * @param text Text to scan\n     * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n     * @param startIndex Starting index of character where the scan should start.\n     * @param endIndex Ending index of character where the scan should end.\n     * @returns Index after quoted characters.\n     */\n    function consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {\n        var ch1 = -1; // 1st previous character\n        var index = startIndex;\n        while (index < endIndex) {\n            var ch = text.charCodeAt(index++);\n            if (ch == quoteCharCode && ch1 !== 92 /* BACK_SLASH */) {\n                return index;\n            }\n            if (ch == 92 /* BACK_SLASH */ && ch1 === 92 /* BACK_SLASH */) {\n                // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n                // quotation. (It should not assume that the last `\"` is escaped.)\n                ch1 = 0;\n            }\n            else {\n                ch1 = ch;\n            }\n        }\n        throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n            new Error();\n    }\n    function malformedStyleError(text, expecting, index) {\n        ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n        throw throwError(\"Malformed style at location \" + index + \" in string '\" + text.substring(0, index) + '[>>' +\n            text.substring(index, index + 1) + '<<]' + text.substr(index + 1) +\n            (\"'. Expecting '\" + expecting + \"'.\"));\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * NOTE: The word `styling` is used interchangeably as style or class styling.\n     *\n     * This file contains code to link styling instructions together so that they can be replayed in\n     * priority order. The file exists because Ivy styling instruction execution order does not match\n     * that of the priority order. The purpose of this code is to create a linked list so that the\n     * instructions can be traversed in priority order when computing the styles.\n     *\n     * Assume we are dealing with the following code:\n     * ```\n     * @Component({\n     *   template: `\n     *     <my-cmp [style]=\" {color: '#001'} \"\n     *             [style.color]=\" #002 \"\n     *             dir-style-color-1\n     *             dir-style-color-2> `\n     * })\n     * class ExampleComponent {\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#001'});\n     *     ɵɵstyleProp('color', '#002');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-1]',\n     * })\n     * class Style1Directive {\n     *   @HostBinding('style') style = {color: '#005'};\n     *   @HostBinding('style.color') color = '#006';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#005'});\n     *     ɵɵstyleProp('color', '#006');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `[dir-style-color-2]',\n     * })\n     * class Style2Directive {\n     *   @HostBinding('style') style = {color: '#007'};\n     *   @HostBinding('style.color') color = '#008';\n     *\n     *   static ngDir = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#007'});\n     *     ɵɵstyleProp('color', '#008');\n     *     ...\n     *   }\n     * }\n     *\n     * @Directive({\n     *   selector: `my-cmp',\n     * })\n     * class MyComponent {\n     *   @HostBinding('style') style = {color: '#003'};\n     *   @HostBinding('style.color') color = '#004';\n     *\n     *   static ngComp = ... {\n     *     ...\n     *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n     *     ɵɵstyleMap({color: '#003'});\n     *     ɵɵstyleProp('color', '#004');\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * The Order of instruction execution is:\n     *\n     * NOTE: the comment binding location is for illustrative purposes only.\n     *\n     * ```\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * ```\n     *\n     * The correct priority order of concatenation is:\n     *\n     * ```\n     * // MyComponent\n     *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n     *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n     * // Style1Directive\n     *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n     *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n     * // Style2Directive\n     *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n     *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n     * // Template: (ExampleComponent)\n     *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n     *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n     * ```\n     *\n     * What color should be rendered?\n     *\n     * Once the items are correctly sorted in the list, the answer is simply the last item in the\n     * concatenation list which is `#002`.\n     *\n     * To do so we keep a linked list of all of the bindings which pertain to this element.\n     * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n     * us to traverse them in the order of priority.\n     *\n     * |Idx|`TView.data`|`LView`          | Notes\n     * |---|------------|-----------------|--------------\n     * |...|            |                 |\n     * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n     * |11 |`30 | 12`   | ...             |\n     * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n     * |13 |`10 | 0`    | ...             |\n     * |...|            |                 |\n     * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n     * |21 |`0 | 22`    | ...             |\n     * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n     * |23 |`20 | 24`   | ...             |\n     * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n     * |25 |`22 | 26`   | ...             |\n     * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n     * |27 |`24 | 28`   | ...             |\n     * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n     * |29 |`26 | 30`   | ...             |\n     * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n     * |31 |`28 | 10`   | ...             |\n     *\n     * The above data structure allows us to re-concatenate the styling no matter which data binding\n     * changes.\n     *\n     * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n     * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n     * there is a map (which may contain the name). This information is useful in knowing if other\n     * styles with higher priority need to be searched for overwrites.\n     *\n     * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n     * `tnode_linked_list_spec.ts` for working example.\n     */\n    var __unused_const_as_closure_does_not_like_standalone_comment_blocks__;\n    /**\n     * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n     * list of styles and compute the duplicate flag.\n     *\n     * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n     *\n     * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n     * the head/tail of the template portion of the styles.\n     *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n     *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n     *\n     * @param tData The `TData` to insert into.\n     * @param tNode `TNode` associated with the styling element.\n     * @param tStylingKey See `TStylingKey`.\n     * @param index location of where `tStyleValue` should be stored (and linked into list.)\n     * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n     *               template.)\n     * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n     *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n     */\n    function insertTStylingBinding(tData, tNode, tStylingKey, index, isHostBinding, isClassBinding) {\n        ngDevMode && assertFirstUpdatePass(getLView()[TVIEW]);\n        var tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n        var tmplHead = getTStylingRangePrev(tBindings);\n        var tmplTail = getTStylingRangeNext(tBindings);\n        tData[index] = tStylingKey;\n        if (isHostBinding) {\n            // We are inserting host bindings\n            // If we don't have template bindings then `tail` is 0.\n            var hasTemplateBindings = tmplTail !== 0;\n            // This is important to know because that means that the `head` can't point to the first\n            // template bindings (there are none.) Instead the head points to the tail of the template.\n            if (hasTemplateBindings) {\n                // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n                var previousNode = getTStylingRangePrev(tData[tmplHead + 1]);\n                tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (previousNode !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[previousNode + 1] =\n                        setTStylingRangeNext(tData[previousNode + 1], index);\n                }\n                // The \"previous\" of the template binding head should point to this host binding\n                tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);\n            }\n            else {\n                tData[index + 1] = toTStylingRange(tmplHead, 0);\n                // if a host binding has already been registered, we need to update the next of that host\n                // binding to point to this one\n                if (tmplHead !== 0) {\n                    // We need to update the template-tail value to point to us.\n                    tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);\n                }\n                // if we don't have template, the head points to template-tail, and needs to be advanced.\n                tmplHead = index;\n            }\n        }\n        else {\n            // We are inserting in template section.\n            // We need to set this binding's \"previous\" to the current template tail\n            tData[index + 1] = toTStylingRange(tmplTail, 0);\n            ngDevMode && assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');\n            if (tmplHead === 0) {\n                tmplHead = index;\n            }\n            else {\n                // We need to update the previous value \"next\" to point to this binding\n                tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);\n            }\n            tmplTail = index;\n        }\n        // Now we need to update / compute the duplicates.\n        // Starting with our location search towards head (least priority)\n        markDuplicates(tData, tStylingKey, index, (isClassBinding ? tNode.classes : tNode.styles) || '', true, isClassBinding);\n        markDuplicates(tData, tStylingKey, index, '', false, isClassBinding);\n        tBindings = toTStylingRange(tmplHead, tmplTail);\n        if (isClassBinding) {\n            tNode.classBindings = tBindings;\n        }\n        else {\n            tNode.styleBindings = tBindings;\n        }\n    }\n    /**\n     * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n     * `TStyleValue`.\n     *\n     * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n     * with it set to `false` to search both the previous as well as next items in the list.\n     *\n     * No duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.px] <<- index\n     *   [style.height.px]\n     * ```\n     *\n     * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n     * duplicates because `width` is not found in any other part of the linked list.\n     *\n     * Duplicate case\n     * ```\n     *   [style.color]\n     *   [style.width.em]\n     *   [style.width.px] <<- index\n     * ```\n     * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n     * because `width` is found in the chain.\n     *\n     * Map case 1\n     * ```\n     *   [style.width.px]\n     *   [style.color]\n     *   [style]  <<- index\n     * ```\n     * In the above case adding `[style]` will produce a duplicate with any other bindings because\n     * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n     *\n     * Map case 2\n     * ```\n     *   [style]\n     *   [style.width.px]\n     *   [style.color]  <<- index\n     * ```\n     * In the above case adding `[style.color]` will produce a duplicate because there is already a\n     * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n     * `width`.\n     *\n     * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n     * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n     *\n     * @param tData\n     * @param tStylingKey\n     * @param index\n     * @param staticValues\n     * @param isPrevDir\n     */\n    function markDuplicates(tData, tStylingKey, index, staticValues, isPrevDir, isClassBinding) {\n        var tStylingAtIndex = tData[index + 1];\n        var isMap = tStylingKey === null;\n        var cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n        var foundDuplicate = false;\n        // We keep iterating as long as we have a cursor\n        // AND either: We found what we are looking for, or we are a map in which case we have to\n        // continue searching even after we find what we were looking for since we are a wild card\n        // and everything needs to be flipped to duplicate.\n        while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n            var tStylingValueAtCursor = tData[cursor];\n            var tStyleRangeAtCursor = tData[cursor + 1];\n            if (tStylingValueAtCursor === null || tStylingKey == null ||\n                tStylingValueAtCursor === tStylingKey) {\n                foundDuplicate = true;\n                tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                    setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n            }\n            cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n                getTStylingRangeNext(tStyleRangeAtCursor);\n        }\n        // We also need to process the static values.\n        if (staticValues !== '' && // If we have static values to search\n            !foundDuplicate // If we have duplicate don't bother since we are already marked as\n        // duplicate\n        ) {\n            if (isMap) {\n                // if we are a Map (and we have statics) we must assume duplicate\n                foundDuplicate = true;\n            }\n            else if (staticValues != null) {\n                // If we found non-map then we iterate over its keys to determine if any of them match ours\n                // If we find a match than we mark it as duplicate.\n                for (var i = isClassBinding ? parseClassName(staticValues) : parseStyle(staticValues); //\n                 i >= 0; //\n                 i = isClassBinding ? parseClassNameNext(staticValues, i) :\n                    parseStyleNext(staticValues, i)) {\n                    if (getLastParsedKey(staticValues) === tStylingKey) {\n                        foundDuplicate = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (foundDuplicate) {\n            // if we found a duplicate, than mark ourselves.\n            tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n                setTStylingRangeNextDuplicate(tStylingAtIndex);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        checkStylingProperty(prop, value, suffix, false);\n        return ɵɵstyleProp;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        checkStylingProperty(className, value, null, true);\n        return ɵɵclassProp;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        checkStylingMap(styleArrayMapSet, styleStringParser, styles, false);\n    }\n    /**\n     * Parse text as style and add values to ArrayMap.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only reference from `ɵɵstyleMap`.\n     *\n     * @param arrayMap ArrayMap to add parsed values to.\n     * @param text text to parse.\n     */\n    function styleStringParser(arrayMap, text) {\n        for (var i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n            styleArrayMapSet(arrayMap, getLastParsedKey(text), getLastParsedValue(text));\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        checkStylingMap(arrayMapSet, classStringParser, classes, true);\n    }\n    /**\n     * Parse text as class and add values to ArrayMap.\n     *\n     * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n     * needed. It is only reference from `ɵɵclassMap`.\n     *\n     * @param arrayMap ArrayMap to add parsed values to.\n     * @param text text to parse.\n     */\n    function classStringParser(arrayMap, text) {\n        for (var i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n            arrayMapSet(arrayMap, getLastParsedKey(text), true);\n        }\n    }\n    /**\n     * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n     *\n     * @param prop property name.\n     * @param value binding value.\n     * @param suffixOrSanitizer suffix or sanitization function\n     * @param isClassBased `true` if `class` change (`false` if `style`)\n     */\n    function checkStylingProperty(prop, value, suffixOrSanitizer, isClassBased) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // Styling instructions use 2 slots per binding.\n        // 1. one for the value / TStylingKey\n        // 2. one for the intermittent-value / TStylingRange\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingPropertyFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n        }\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // This is a work around. Once PR#34480 lands the sanitizer is passed explicitly and this line\n            // can be removed.\n            var styleSanitizer = void 0;\n            if (suffixOrSanitizer == null) {\n                if (styleSanitizer = getCurrentStyleSanitizer()) {\n                    suffixOrSanitizer = styleSanitizer;\n                }\n            }\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer), isClassBased, bindingIndex);\n        }\n    }\n    /**\n    * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n    *\n    * @param tStylingMapKey See `STYLE_MAP_STYLING_KEY` and `CLASS_MAP_STYLING_KEY`.\n    * @param value binding value.\n    * @param isClassBased `true` if `class` change (`false` if `style`)\n    */\n    function checkStylingMap(arrayMapSet, stringParser, value, isClassBased) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var bindingIndex = incrementBindingIndex(2);\n        if (tView.firstUpdatePass) {\n            stylingPropertyFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n        }\n        if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n            if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n                // VE does not concatenate the static portion like we are doing here.\n                // Instead VE just ignores the static completely if dynamic binding is present.\n                // Because of locality we have already set the static portion because we don't know if there\n                // is a dynamic portion until later. If we would ignore the static portion it would look like\n                // tha the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n                // thing as it would think tha the static portion was removed. For this reason we\n                // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n                var staticPrefix = isClassBased ? tNode.classes : tNode.styles;\n                ngDevMode && isClassBased === false && staticPrefix !== null &&\n                    assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n                if (typeof value === 'string') {\n                    value = concatStringsWithSpace(staticPrefix, value);\n                }\n                // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n                // This takes over the `[style]` binding. (Same for `[class]`)\n                setDirectiveInputsWhichShadowsStyling(tNode, lView, value, isClassBased);\n            }\n            else {\n                updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingArrayMap(arrayMapSet, stringParser, value), isClassBased, bindingIndex);\n            }\n        }\n    }\n    /**\n     * Determines when the binding is in `hostBindings` section\n     *\n     * @param tView Current `TView`\n     * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n     */\n    function isInHostBindings(tView, bindingIndex) {\n        // All host bindings are placed after the expando section.\n        return bindingIndex >= tView.expandoStartIndex;\n    }\n    /**\n    * Collects the necessary information to insert the binding into a linked list of style bindings\n    * using `insertTStylingBinding`.\n    *\n    * @param tView `TView` where the binding linked list will be stored.\n    * @param prop Property/key of the binding.\n    * @param suffix Optional suffix or Sanitization function.\n    * @param bindingIndex Index of binding associated with the `prop`\n    * @param isClassBased `true` if `class` change (`false` if `style`)\n    */\n    function stylingPropertyFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {\n        ngDevMode && assertFirstUpdatePass(tView);\n        var tData = tView.data;\n        if (tData[bindingIndex + 1] === null) {\n            // The above check is necessary because we don't clear first update pass until first successful\n            // (no exception) template execution. This prevents the styling instruction from double adding\n            // itself to the list.\n            // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n            // if so as not to read unnecessarily.\n            var tNode = tData[getSelectedIndex() + HEADER_OFFSET];\n            var isHostBindings = isInHostBindings(tView, bindingIndex);\n            if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n                // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n                // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n                // we need to neutralize this binding since that directive is shadowing it.\n                // We turn this into a noop by setting the key to `false`\n                tStylingKey = false;\n            }\n            insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n        }\n    }\n    /**\n     * Convert user input to `ArrayMap`.\n     *\n     * This function takes user input which could be `string`, Object literal, or iterable and converts\n     * it into a consistent representation. The output of this is `ArrayMap` (which is an array where\n     * even indexes contain keys and odd indexes contain values for those keys).\n     *\n     * The advantage of converting to `ArrayMap` is that we can perform diff in a input independent way.\n     * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n     * applied)\n     *\n     * The fact that `ArrayMap` is sorted is very important because it allows us to compute the\n     * difference in linear fashion without the need to allocate any additional data.\n     *\n     * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n     * which values need to be delete, over the new `Map` to determine additions, and we would have to\n     * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n     *\n     * @param stringParser The parser is passed in so that it will be tree shakable. See\n     *        `styleStringParser` and `classStringParser`\n     * @param value The value to parse/convert to `ArrayMap`\n     */\n    function toStylingArrayMap(arrayMapSet, stringParser, value) {\n        if (value === null || value === undefined || value === '')\n            return EMPTY_ARRAY$3;\n        var styleArrayMap = [];\n        if (Array.isArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                arrayMapSet(styleArrayMap, value[i], true);\n            }\n        }\n        else if (typeof value === 'object') {\n            if (value instanceof Map) {\n                value.forEach(function (v, k) { return arrayMapSet(styleArrayMap, k, v); });\n            }\n            else if (value instanceof Set) {\n                value.forEach(function (k) { return arrayMapSet(styleArrayMap, k, true); });\n            }\n            else {\n                for (var key in value) {\n                    if (value.hasOwnProperty(key)) {\n                        arrayMapSet(styleArrayMap, key, value[key]);\n                    }\n                }\n            }\n        }\n        else if (typeof value === 'string') {\n            stringParser(styleArrayMap, value);\n        }\n        else {\n            ngDevMode && throwError('Unsupported styling type ' + typeof value);\n        }\n        return styleArrayMap;\n    }\n    /**\n     * Set a `value` for a `key` taking style sanitization into account.\n     *\n     * See: `arrayMapSet` for details\n     *\n     * @param arrayMap ArrayMap to add to.\n     * @param key Style key to add. (This key will be checked if it needs sanitization)\n     * @param value The value to set (If key needs sanitization it will be sanitized)\n     */\n    function styleArrayMapSet(arrayMap, key, value) {\n        if (stylePropNeedsSanitization(key)) {\n            value = ɵɵsanitizeStyle(value);\n        }\n        arrayMapSet(arrayMap, key, value);\n    }\n    /**\n     * Update map based styling.\n     *\n     * Map based styling could be anything which contains more than one binding. For example `string`,\n     * `Map`, `Set` or object literal. Dealing with all of these types would complicate the logic so\n     * instead this function expects that the complex input is first converted into normalized\n     * `ArrayMap`. The advantage of normalization is that we get the values sorted, which makes it very\n     * cheap to compute deltas between the previous and current value.\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param oldArrayMap Previous value represented as `ArrayMap`\n     * @param newArrayMap Current value represented as `ArrayMap`\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStylingMap(tView, tNode, lView, renderer, oldArrayMap, newArrayMap, isClassBased, bindingIndex) {\n        if (oldArrayMap === NO_CHANGE) {\n            // ON first execution the oldArrayMap is NO_CHANGE => treat is as empty ArrayMap.\n            oldArrayMap = EMPTY_ARRAY$3;\n        }\n        var oldIndex = 0;\n        var newIndex = 0;\n        var oldKey = 0 < oldArrayMap.length ? oldArrayMap[0] : null;\n        var newKey = 0 < newArrayMap.length ? newArrayMap[0] : null;\n        while (oldKey !== null || newKey !== null) {\n            ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n            ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n            var oldValue = oldIndex < oldArrayMap.length ? oldArrayMap[oldIndex + 1] : undefined;\n            var newValue = newIndex < newArrayMap.length ? newArrayMap[newIndex + 1] : undefined;\n            var setKey = null;\n            var setValue = undefined;\n            if (oldKey === newKey) {\n                // UPDATE: Keys are equal => new value is overwriting old value.\n                oldIndex += 2;\n                newIndex += 2;\n                if (oldValue !== newValue) {\n                    setKey = newKey;\n                    setValue = newValue;\n                }\n            }\n            else if (newKey === null || oldKey !== null && oldKey < newKey) {\n                // DELETE: oldKey key is missing or we did not find the oldKey in the newValue.\n                oldIndex += 2;\n                setKey = oldKey;\n            }\n            else {\n                // CREATE: newKey is less than oldKey (or no oldKey) => we have new key.\n                ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n                newIndex += 2;\n                setKey = newKey;\n                setValue = newValue;\n            }\n            if (setKey !== null) {\n                updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n            }\n            oldKey = oldIndex < oldArrayMap.length ? oldArrayMap[oldIndex] : null;\n            newKey = newIndex < newArrayMap.length ? newArrayMap[newIndex] : null;\n        }\n    }\n    /**\n     * Update a simple (property name) styling.\n     *\n     * This function takes `prop` and updates the DOM to that value. The function takes the binding\n     * value as well as binding priority into consideration to determine which value should be written\n     * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n     * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n     *\n     * @param tView Associated `TView.data` contains the linked list of binding priorities.\n     * @param tNode `TNode` where the binding is located.\n     * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n     * @param renderer Renderer to use if any updates.\n     * @param prop Either style property name or a class name.\n     * @param value Either style vale for `prop` or `true`/`false` if `prop` is class.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     * @param bindingIndex Binding index of the binding.\n     */\n    function updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {\n        if (tNode.type !== 3 /* Element */) {\n            // It is possible to have styling on non-elements (such as ng-container).\n            // This is rare, but it does happen. In such a case, just ignore the binding.\n            return;\n        }\n        var tData = tView.data;\n        var tRange = tData[bindingIndex + 1];\n        var higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n            findStylingValue(tData, null, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n            undefined;\n        if (!isStylingValuePresent(higherPriorityValue)) {\n            // We don't have a next duplicate, or we did not find a duplicate value.\n            if (!isStylingValuePresent(value)) {\n                // We should delete current value or restore to lower priority value.\n                if (getTStylingRangePrevDuplicate(tRange)) {\n                    // We have a possible prev duplicate, let's retrieve it.\n                    value =\n                        findStylingValue(tData, tNode, lView, prop, getTStylingRangePrev(tRange), isClassBased);\n                }\n            }\n            var rNode = getNativeByIndex(getSelectedIndex(), lView);\n            applyStyling(renderer, isClassBased, rNode, prop, value);\n        }\n    }\n    /**\n     * Search for styling value with higher priority which is overwriting current value.\n     *\n     * When value is being applied at a location related values need to be consulted.\n     * - If there is a higher priority binding, we should be using that one instead.\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n     *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n     * - If there is a lower priority binding and we are changing to `undefined`\n     *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n     *   `undefined` requires that we check `exp` (and static values) and use that as new value.\n     *\n     * NOTE: The styling stores two values.\n     * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n     *    is used for dirty checking).\n     * 2. The normalized value (converted to `ArrayMap` if map and sanitized) is stored at `index + 1`.\n     *    The advantage of storing the sanitized value is that once the value is written we don't need\n     *    to worry about sanitizing it later or keeping track of the sanitizer.\n     *\n     * @param tData `TData` used for traversing the priority.\n     * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n     *   - `TNode` search previous and quit as soon as `isStylingValuePresent(value)` is true.\n     *      If no value found consult `tNode.styleMap`/`tNode.classMap` for default value.\n     *   - `null` search next and go all the way to end. Return last value where\n     *     `isStylingValuePresent(value)` is true.\n     * @param lView `LView` used for retrieving the actual values.\n     * @param prop Property which we are interested in.\n     * @param index Starting index in the linked list of styling bindings where the search should start.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function findStylingValue(tData, tNode, lView, prop, index, isClassBased) {\n        var value = undefined;\n        while (index > 0) {\n            var key = tData[index];\n            var currentValue = key === null ? arrayMapGet(lView[index + 1], prop) :\n                key === prop ? lView[index + 1] : undefined;\n            if (isStylingValuePresent(currentValue)) {\n                value = currentValue;\n                if (tNode !== null) {\n                    return value;\n                }\n            }\n            var tRange = tData[index + 1];\n            index = tNode !== null ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n        }\n        if (tNode !== null) {\n            // in case where we are going in previous direction AND we did not find anything, we need to\n            // consult static styling\n            var staticArrayMap = isClassBased ? tNode.classesMap : tNode.stylesMap;\n            if (staticArrayMap === undefined) {\n                // This is the first time we are here, and we need to initialize it.\n                initializeStylingStaticArrayMap(tNode);\n                staticArrayMap = isClassBased ? tNode.classesMap : tNode.stylesMap;\n            }\n            if (staticArrayMap !== null) {\n                value = arrayMapGet(staticArrayMap, prop);\n            }\n        }\n        return value;\n    }\n    /**\n     * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n     * resolution should be used.)\n     *\n     * @param value Binding style value.\n     */\n    function isStylingValuePresent(value) {\n        // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n        // have an opinion as to what this binding should be and you should consult other bindings by\n        // priority to determine the valid value.\n        // This is extracted into a single function so that we have a single place to control this.\n        return value !== undefined;\n    }\n    /**\n     * Lazily computes `tNode.classesMap`/`tNode.stylesMap`.\n     *\n     * This code is here because we don't want to included it in `elementStart` as it would make hello\n     * world bigger even if no styling would be present. Instead we initialize the values here so that\n     * tree shaking will only bring it in if styling is present.\n     *\n     * @param tNode `TNode` to initialize.\n     */\n    function initializeStylingStaticArrayMap(tNode) {\n        ngDevMode && assertEqual(tNode.classesMap, undefined, 'Already initialized!');\n        ngDevMode && assertEqual(tNode.stylesMap, undefined, 'Already initialized!');\n        var styleMap = null;\n        var classMap = null;\n        var mergeAttrs = tNode.mergedAttrs || EMPTY_ARRAY$3;\n        var mode = -1 /* ImplicitAttributes */;\n        for (var i = 0; i < mergeAttrs.length; i++) {\n            var item = mergeAttrs[i];\n            if (typeof item === 'number') {\n                mode = item;\n            }\n            else if (mode === 1 /* Classes */) {\n                classMap = classMap || [];\n                arrayMapSet(classMap, item, true);\n            }\n            else if (mode === 2 /* Styles */) {\n                styleMap = styleMap || [];\n                arrayMapSet(styleMap, item, mergeAttrs[++i]);\n            }\n        }\n        tNode.classesMap = classMap;\n        tNode.stylesMap = styleMap;\n    }\n    /**\n     * Sanitizes or adds suffix to the value.\n     *\n     * If value is `null`/`undefined` no suffix is added\n     * @param value\n     * @param suffixOrSanitizer\n     */\n    function normalizeAndApplySuffixOrSanitizer(value, suffixOrSanitizer) {\n        if (value === null || value === undefined) {\n            // do nothing\n        }\n        else if (typeof suffixOrSanitizer === 'function') {\n            // sanitize the value.\n            value = suffixOrSanitizer(value);\n        }\n        else if (typeof suffixOrSanitizer === 'string') {\n            value = value + suffixOrSanitizer;\n        }\n        else if (typeof value === 'object') {\n            value = stringify(unwrapSafeValue(value));\n        }\n        return value;\n    }\n    /**\n     * Tests if the `TNode` has input shadow.\n     *\n     * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n     * `@Input('class')` as input.\n     *\n     * @param tNode `TNode` which we would like to see if it has shadow.\n     * @param isClassBased `true` if `class` (`false` if `style`)\n     */\n    function hasStylingInputShadow(tNode, isClassBased) {\n        return (tNode.flags & (isClassBased ? 16 /* hasClassInput */ : 32 /* hasStyleInput */)) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, adjustedIndex);\n        var tNode = tView.firstCreatePass ?\n            getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n            tView.data[adjustedIndex];\n        var textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n        appendChild(textNative, tNode, lView);\n        // Text nodes are self closing.\n        setPreviousOrParentTNode(tNode, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingMap(arrayMapSet, classStringParser, interpolatedValue, true);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --config=ivy\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (token, notFoundValue) {\n        throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n    };\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: ɵ0$b\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRenderer = rendererFactory.createRenderer(null, null);\n        var hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, null, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param hostRenderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, addVersion, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n        if (mergedAttrs !== null) {\n            computeStaticStyling(tNode, mergedAttrs);\n            if (rNode !== null) {\n                setUpAttributes(hostRenderer, rNode, mergedAttrs);\n                if (tNode.classes !== null) {\n                    writeDirectClass(hostRenderer, rNode, tNode.classes);\n                }\n                if (tNode.styles !== null) {\n                    writeDirectStyle(hostRenderer, rNode, tNode.styles);\n                }\n            }\n        }\n        var viewRenderer = rendererFactory.createRenderer(rNode, def);\n        if (rNode !== null && addVersion) {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProceduralRenderer(hostRenderer) ?\n                hostRenderer.setAttribute(rNode, 'ng-version', addVersion) :\n                rNode.setAttribute('ng-version', addVersion);\n        }\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, viewRenderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initTNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {\n        var tView = rootLView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootLView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootLView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass &&\n            (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var rootTView = rootLView[TVIEW];\n            addHostBindingsToExpandoInstructions(rootTView, componentDef);\n            growHostVarsSpace(rootTView, rootLView, componentDef.hostVars);\n            invokeHostBindingsInCreationMode(componentDef, component);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var shouldInheritFields = true;\n        var inheritanceChain = [definition];\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                if (shouldInheritFields) {\n                    inheritanceChain.push(superDef);\n                    // Some fields in the definition may be empty, if there were no values to put in them that\n                    // would've justified object creation. Unwrap them if necessary.\n                    var writeableDef = definition;\n                    writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                    writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                    writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                    // Merge hostBindings\n                    var superHostBindings = superDef.hostBindings;\n                    superHostBindings && inheritHostBindings(definition, superHostBindings);\n                    // Merge queries\n                    var superViewQuery = superDef.viewQuery;\n                    var superContentQueries = superDef.contentQueries;\n                    superViewQuery && inheritViewQuery(definition, superViewQuery);\n                    superContentQueries && inheritContentQueries(definition, superContentQueries);\n                    // Merge inputs and outputs\n                    fillProperties(definition.inputs, superDef.inputs);\n                    fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                    fillProperties(definition.outputs, superDef.outputs);\n                    // Inherit hooks\n                    // Assume super class inheritance feature has already run.\n                    writeableDef.afterContentChecked =\n                        writeableDef.afterContentChecked || superDef.afterContentChecked;\n                    writeableDef.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                    writeableDef.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                    writeableDef.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                    writeableDef.doCheck = definition.doCheck || superDef.doCheck;\n                    writeableDef.onDestroy = definition.onDestroy || superDef.onDestroy;\n                    writeableDef.onInit = definition.onInit || superDef.onInit;\n                }\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                        // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                        // def already has all the necessary information inherited from its super class(es), so we\n                        // can stop merging fields from super classes. However we need to iterate through the\n                        // prototype chain to look for classes that might contain other \"features\" (like\n                        // NgOnChanges), which we should invoke for the original `definition`. We set the\n                        // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                        // logic and only invoking functions from the \"features\" list.\n                        if (feature === ɵɵInheritDefinitionFeature) {\n                            shouldInheritFields = false;\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n        mergeHostAttrsAcrossInheritance(inheritanceChain);\n    }\n    /**\n     * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n     *\n     * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n     * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n     * type.\n     */\n    function mergeHostAttrsAcrossInheritance(inheritanceChain) {\n        var hostVars = 0;\n        var hostAttrs = null;\n        // We process the inheritance order from the base to the leaves here.\n        for (var i = inheritanceChain.length - 1; i >= 0; i--) {\n            var def = inheritanceChain[i];\n            // For each `hostVars`, we need to add the superclass amount.\n            def.hostVars = (hostVars += def.hostVars);\n            // for each `hostAttrs` we need to merge it with superclass.\n            def.hostAttrs =\n                mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        if (prevHostBindings) {\n            definition.hostBindings = function (rf, ctx) {\n                superHostBindings(rf, ctx);\n                prevHostBindings(rf, ctx);\n            };\n        }\n        else {\n            definition.hostBindings = superHostBindings;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n        // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n        // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+847.sha-53c4c8d');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    var ɵ0$c = trackByIdentity;\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = {};\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = {};\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = stringifyCSSSelectorList(componentDef.selectors);\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n                // Determine a tag name used for creating host elements when this component is created\n                // dynamically. Default to 'div' if this component did not specify any tag name in its\n                // selector.\n                elementCreate(this.componentDef.selectors[0][0] || 'div', rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector);\n            var addVersion = rootSelectorOrNode && hostRNode ? VERSION.full : null;\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer, addVersion, null);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en',\n        [['a', 'p'], ['AM', 'PM'], u],\n        [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u,\n        [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n        0,\n        [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n        ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n        'USD',\n        '$',\n        'US Dollar',\n        {},\n        'ltr',\n        plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the default currency code for the given locale.\n     *\n     * The default is defined as the first currency which is still in use.\n     *\n     * @param locale The code of the locale whose currency code we want.\n     * @returns The code of the default currency for the given locale.\n     *\n     */\n    function getLocaleCurrencyCode(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.CurrencyCode] || null;\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyCode\"] = 15] = \"CurrencyCode\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 16] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 17] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 18] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 19] = \"Directionality\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 20] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 21] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    /**\n     * USD currency code that the application uses by default for CurrencyPipe when no\n     * DEFAULT_CURRENCY_CODE is provided.\n     */\n    var USD_CURRENCY_CODE = 'USD';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    if (caseIndex > -1) {\n                                        // Add the nodes for the new case\n                                        readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                        caseCreated = true;\n                                    }\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, attrName, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     */\n    function pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param lView LView in which the function is being executed.\n     * @param bindingRoot Binding root index.\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {\n        var bindingIndex = bindingRoot + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$d = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$d)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$5 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$5)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                    // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                    // should verify that there are no unknown elements in a template. In AOT mode, that check\n                    // happens at compile time and `schemas` information is not present on Component and Module\n                    // defs after compilation (so the check doesn't happen the second time at runtime).\n                    if (!ngModuleDef.schemas) {\n                        ngModuleDef.schemas = [];\n                    }\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$5,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * By default this operation is memoized and the result is cached on the module's definition. You\n     * can avoid memoization and previously stored results (if available) by providing the second\n     * argument with the `true` value (forcing transitive scopes recalculation).\n     *\n     * This function can be called on modules with components that have not fully compiled yet, but the\n     * result should not be used until they have.\n     *\n     * @param moduleType module that transitive scope should be calculated for.\n     * @param forceRecalc flag that indicates whether previously calculated and memoized values should\n     * be ignored and transitive scope to be fully recalculated.\n     */\n    function transitiveScopesFor(moduleType, forceRecalc) {\n        if (forceRecalc === void 0) { forceRecalc = false; }\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (!forceRecalc && def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, forceRecalc);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, forceRecalc);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        if (!forceRecalc) {\n            def.transitiveCompileScopes = scopes;\n        }\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var reflect = getReflect();\n        var propMetadata = reflect.ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        var reflect = getReflect();\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return reflect.hasLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = reflect.propMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$e = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$3 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     *\n     * ```\n     *\n     * The following example registers another DOM event handler that listens for key-press events.\n     * ``` ts\n     * import { HostListener, Component } from \"@angular/core\";\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n     * increment the counter.\n     *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n     * })\n     * class AppComponent {\n     *   counter = 0;\n     *   @HostListener('window:keydown', ['$event'])\n     *   handleKeyDown(event: KeyboardEvent) {\n     *     this.counter++;\n     *   }\n     *   resetCounter() {\n     *     this.counter = 0;\n     *   }\n     * }\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$f = function (ngModule) { return ngModule; }, ɵ1$4 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injection token that allows you to provide one or more initialization functions.\n     * These function are injected at application startup and executed during\n     * app initialization. If any of these functions returns a Promise, initialization\n     * does not complete until the Promise is resolved.\n     *\n     * You can, for example, create a factory function that loads language data\n     * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n     * That way, the function is executed during the application bootstrap process,\n     * and the needed data is available on startup.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Provide this token to set the default currency code your application uses for\n     * CurrencyPipe when there is no currency code passed into it. This is only used by\n     * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * <div class=\"alert is-helpful\">\n     *\n     * **Deprecation notice:**\n     *\n     * The default currency code is currently always `USD` but this is deprecated from v9.\n     *\n     * **In v10 the default currency code will be taken from the current locale.**\n     *\n     * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n     * your application `NgModule`:\n     *\n     * ```ts\n     * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n     * ```\n     *\n     * </div>\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var DEFAULT_CURRENCY_CODE = new InjectionToken('DefaultCurrencyCode');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__PRE_R3__;\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        if (ivyEnabled) {\n                            // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n                            var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                            setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                        }\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            /** @internal */\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = {};\n                // Collect properties from the DOM.\n                copyDomProperties(this.nativeElement, properties);\n                // Collect properties from the bindings. This is needed for animation renderer which has\n                // synthetic properties which don't get reflected into the DOM.\n                collectPropertyBindings(properties, tNode, lView, tData);\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    var lowercaseName = attr.name.toLowerCase();\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                        // Save the lowercase name to align the behavior between browsers.\n                        // IE preserves the case, while all other browser convert it to lower case.\n                        attributes[lowercaseName] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var result = {};\n                var element = this.nativeElement;\n                // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n                var className = element.className;\n                var classes = className && typeof className !== 'string' ? className.baseVal.split(' ') :\n                    className.split(' ');\n                classes.forEach(function (value) { return result[value] = true; });\n                return result;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback.call(node, eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n                    // use `toString` on the listener and see if it contains the token. We use this approach to\n                    // ensure that it still worked with compiled code since it cannot remove or rename string\n                    // literals. We also considered using a special function name (i.e. if(listener.name ===\n                    // special)) but that was more cumbersome and we were also concerned the compiled code could\n                    // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n                    if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n                        var unwrappedListener = listener('__ngUnwrap__');\n                        return invokedListeners.indexOf(unwrappedListener) === -1 &&\n                            unwrappedListener.call(node, eventObj);\n                    }\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function copyDomProperties(element, properties) {\n        if (element) {\n            // Skip own properties (as those are patched)\n            var obj = Object.getPrototypeOf(element);\n            var NodePrototype = Node.prototype;\n            while (obj !== null && obj !== NodePrototype) {\n                var descriptors = Object.getOwnPropertyDescriptors(obj);\n                for (var key in descriptors) {\n                    if (!key.startsWith('__') && !key.startsWith('on')) {\n                        // don't include properties starting with `__` and `on`.\n                        // `__` are patched values which should not be included.\n                        // `on` are listeners which also should not be included.\n                        var value = element[key];\n                        if (isPrimitiveValue(value)) {\n                            properties[key] = value;\n                        }\n                    }\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n        }\n    }\n    function isPrimitiveValue(value) {\n        return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n            value === null;\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode, false);\n        if (context !== null) {\n            var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n            _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n        }\n        else {\n            // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n            // APIs.\n            _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n        }\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = lView[DECLARATION_COMPONENT_VIEW];\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(properties, tNode, lView, tData) {\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__PRE_R3__;\n    function getDebugNodeR2__PRE_R3__(nativeNode) {\n        return getDebugNode__PRE_R3__(nativeNode);\n    }\n    function getDebugNodeR2__POST_R3__(_nativeNode) {\n        return null;\n    }\n    var getDebugNodeR2 = getDebugNodeR2__PRE_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n            typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    var ɵ0$g = USD_CURRENCY_CODE;\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n        { provide: DEFAULT_CURRENCY_CODE, useValue: ɵ0$g },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n                'For server-side rendering applications add the import to your `main.server.ts` file.)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DEFAULT_CURRENCY_CODE = DEFAULT_CURRENCY_CODE;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵangular_packages_core_core_a = isForwardRef;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_ba = getLView;\n    exports.ɵangular_packages_core_core_bb = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bc = getBindingRoot;\n    exports.ɵangular_packages_core_core_bd = nextContextImpl;\n    exports.ɵangular_packages_core_core_bf = pureFunction1Internal;\n    exports.ɵangular_packages_core_core_bg = pureFunction2Internal;\n    exports.ɵangular_packages_core_core_bh = pureFunction3Internal;\n    exports.ɵangular_packages_core_core_bi = pureFunction4Internal;\n    exports.ɵangular_packages_core_core_bj = pureFunctionVInternal;\n    exports.ɵangular_packages_core_core_bk = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bl = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bm = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_bp = noSideEffects;\n    exports.ɵangular_packages_core_core_bq = getRootContext;\n    exports.ɵangular_packages_core_core_c = NullInjector;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_m = getDebugNodeR2__PRE_R3__;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_t = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_u = USD_CURRENCY_CODE;\n    exports.ɵangular_packages_core_core_v = _def;\n    exports.ɵangular_packages_core_core_w = DebugContext;\n    exports.ɵangular_packages_core_core_x = SCHEDULER;\n    exports.ɵangular_packages_core_core_y = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_z = instructionState;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNodeR2 = getDebugNodeR2;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocaleCurrencyCode = getLocaleCurrencyCode;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵinvalidFactoryDep = ɵɵinvalidFactoryDep;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}