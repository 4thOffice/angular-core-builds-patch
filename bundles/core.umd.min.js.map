{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","viewProviders","id","feature","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","stringify$1","loadInternal","readElementValue","getLNode","tNode","hostView","isContentQueryHost","MONKEY_PATCH_KEY_NAME","getContext","mpValue","readPatchedData","lViewData","lNodeIndex","directiveIndices","isComponentInstance","findViaComponent","isDirectiveInstance","instance","findViaDirective","directiveInstance","directivesAcrossView","directiveIndex","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectiveIndices","discoverDirectives","directiveInstances","findViaNativeElement","existingCtx","lNode","getLNodeFromViewData","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","getLElementFromComponent","componentInstance","readPatchedLViewData","child","componentIndices","components","elementComponentIndex","lElementIndex","startIndex","count","throwMultipleComponentError","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentLNode","getHostElementNode","hostTNode","getParentOrContainerNode","parentTNode","getContainerNode","embeddedView","containerHostIndex","dynamicLContainerNode","getContainerRenderParent","tViewNode","view","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParentNode","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","elementNode","executeNodeAction","lContainerNode","childContainerData","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","lContainer","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","tContainer","destroyLView","getLViewChild","viewData","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentLNode","parentEl","renderParent","getBeforeNodeForView","ngContainer","parentNative","appendProjectedNode","projectedLNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","refreshChildComponents","componentRefresh","bindings","hostBindingStartIndex","defs","dirIndex","executeInitAndContentHooks","createLViewData","blueprint","createLNodeObject","nodeInjector","createNodeAtIndex","parentInSameView","tParent","isState","createTNode","tData","tNode_1","dynamicContainerNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","nativeNodeLocalRefExtractor","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","clone","tDirectives","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","queueHostBindingForCheck","NO_CHANGE","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","loadElement","removeAttribute","strValue","elementProperty","getTNode","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","lElement","allocStylingContext","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNative","textBinding","existingNode","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","createLContainer","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","createRootComponent","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","elementIndex","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","RendererStyleFlags2","ChangeDetectorRef","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","TemplateRef","ViewContainerRef","RenderComponentType","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","wrapper","rootFlags","tElementNode","componentTag","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","createElementRef","injectTemplateRef","createTemplateRef","injectViewContainerRef","createContainerRef","injectChangeDetectorRef","createViewRef","injectRenderer2","getOrCreateRenderer2","injectAttribute","attrNameToInject","isComponent","componentIndex","hostComponentView","bloomHash","bloomHashBit","bloomFindPossibleInjector","injectorView","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","hostLNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainer","_tContainerNode","_hostTNode","_hostView","_viewRefs","_getHostNode","parentLInjector","clear","createEmbeddedView","templateRef","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","destroyed","container$$1","move","newIndex","shift","TemplateRef$1","getFactoryOf","typeAny","getInheritedFactory","TemplateRef$$1","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedViewAndNode","declarationView","queries","templateRefExtractor","PublicFeature","i18nTagRegex","appendI18nNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","LQueries_","shallow","deep","track","predicate","descend","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµtemplateRefExtractor","ÉµinjectRenderer2","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadDirective","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStylingProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","expression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","compilePipe","compilePipeFromMetadata","Version","R3_COMPILE_COMPONENT","R3_COMPILE_DIRECTIVE","R3_COMPILE_INJECTABLE","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","R3_COMPILE_NGMODULE","setScopeOnDeclaredComponents","declaration","R3_COMPILE_PIPE","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","VERSION","full","major","minor","patch","Injectable","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","f","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugContext","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","element$$1","Render3DebugContext","matchedDirectives","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_INJECTABLE__POST_NGCC__","R3_COMPILE_NGMODULE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","pipeBind2","Éµstore","ÉµwhenRendered","whenRendered","getRootContext","getRootView","Éµi18nApply","i18nApply","instructions","localParentTNode","localPreviousTNode","instruction","elementTNode","textRNode","lastNodeIndex","textTNode","removedNode","removedTNode","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.6+26.sha-d5f47d6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n    function getLNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var lNodeIndex = void 0;\n                var component = undefined;\n                var directiveIndices = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    lNodeIndex = findViaComponent(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    lNodeIndex = findViaDirective(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directiveIndices = discoverDirectiveIndices(lViewData, lNodeIndex);\n                    directives = directiveIndices ? discoverDirectives(lViewData, directiveIndices) : null;\n                }\n                else {\n                    lNodeIndex = findViaNativeElement(lViewData, target);\n                    if (lNodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var lNode = getLNodeFromViewData(lViewData, lNodeIndex);\n                var existingCtx = readPatchedData(lNode.native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, lNodeIndex, lNode.native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && directiveIndices && context.directives === undefined) {\n                    context.directiveIndices = directiveIndices;\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var lNode = getLNodeFromViewData(lViewData, index);\n                        var context = createLContext(lViewData, index, lNode.native);\n                        attachPatchData(lNode.native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, lNodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            lNodeIndex: lNodeIndex,\n            native: native,\n            component: undefined,\n            directiveIndices: undefined,\n            directives: undefined,\n        };\n    }\n    /**\n     * A utility function for retrieving the matching lElementNode\n     * from a given DOM element, component or directive.\n     */\n    function getLElementNode(target) {\n        var context = getContext(target);\n        return context ? getLNodeFromViewData(context.lViewData, context.lNodeIndex) : null;\n    }\n    /**\n     * A simplified lookup function for finding the LElementNode from a component instance.\n     *\n     * This function exists for tree-shaking purposes to avoid having to pull in everything\n     * that `getContext` has in the event that an Angular application doesn't need to have\n     * any programmatic access to an element's context (only change detection uses this function).\n     */\n    function getLElementFromComponent(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var lNode;\n        if (Array.isArray(lViewData)) {\n            var lNodeIndex = findViaComponent(lViewData, componentInstance);\n            lNode = readElementValue(lViewData[lNodeIndex]);\n            var context = createLContext(lViewData, lNodeIndex, lNode.native);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            lNode = readElementValue(context.lViewData[context.lNodeIndex]);\n        }\n        return lNode;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, native) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var lNode = getLNodeFromViewData(lViewData, tNode.index);\n            if (lNode.native === native) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var lNodeData = readElementValue(lViewData[elementComponentIndex]).data;\n                if (lNodeData[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootNode = lViewData[HEADER_OFFSET];\n            var rootComponent = rootNode.data[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. By first checking to see if the instance\n        // is actually present we can narrow down to which lElementNode\n        // contains the instance of the directive and then return the index\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var directiveIndex = directivesAcrossView ? directivesAcrossView.indexOf(directiveInstance) : -1;\n        if (directiveIndex >= 0) {\n            var tNode = lViewData[TVIEW].firstChild;\n            while (tNode) {\n                var directiveIndexStart = getDirectiveStartIndex(tNode);\n                var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n                if (directiveIndex >= directiveIndexStart && directiveIndex < directiveIndexEnd) {\n                    return tNode.index;\n                }\n                tNode = traverseNextElement(tNode);\n            }\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Retruns the instance of the LElementNode at the given index in the LViewData.\n     *\n     * This function will also unwrap the inner value incase it's stuffed into an\n     * array (which is what happens when [style] and [class] bindings are present\n     * in the view instructions for the element being returned).\n     */\n    function getLNodeFromViewData(lViewData, lElementIndex) {\n        var value = lViewData[lElementIndex];\n        return value ? readElementValue(value) : null;\n    }\n    /**\n     * Returns a collection of directive index values that are used on the element\n     * (which is referenced by the lNodeIndex)\n     */\n    function discoverDirectiveIndices(lViewData, lNodeIndex) {\n        var directivesAcrossView = lViewData[DIRECTIVES];\n        var tNode = lViewData[TVIEW].data[lNodeIndex];\n        if (directivesAcrossView && directivesAcrossView.length) {\n            // this check for tNode is to determine if the value is a LElementNode instance\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            var directiveIndices = [];\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                // special case since the instance of the component (if it exists)\n                // is stored in the directives array.\n                if (i > directiveIndexStart ||\n                    !isComponentInstance(directivesAcrossView[directiveIndexStart])) {\n                    directiveIndices.push(i);\n                }\n            }\n            return directiveIndices.length ? directiveIndices : null;\n        }\n        return null;\n    }\n    function discoverDirectives(lViewData, directiveIndices) {\n        var directives = [];\n        var directiveInstances = lViewData[DIRECTIVES];\n        if (directiveInstances) {\n            for (var i = 0; i < directiveIndices.length; i++) {\n                var directiveIndex = directiveIndices[i];\n                var directive = directiveInstances[directiveIndex];\n                directives.push(directive);\n            }\n        }\n        return directives;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent LNode of a given node. */\n    function getParentLNode(tNode, currentView) {\n        return tNode.parent == null ? getHostElementNode(currentView) :\n            getLNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host LElementNode given a view. Will return null if the host element is an\n     * LViewNode, since they are being phased out.\n     */\n    function getHostElementNode(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getLNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Gets the parent LNode if it's not a view. If it's a view, it will instead return the view's\n     * parent container node.\n     */\n    function getParentOrContainerNode(tNode, currentView) {\n        var parentTNode = tNode.parent || currentView[HOST_NODE];\n        return parentTNode && parentTNode.type === 2 /* View */ ?\n            getContainerNode(parentTNode, currentView) :\n            getParentLNode(tNode, currentView);\n    }\n    function getContainerNode(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ?\n                embeddedView[PARENT][containerHostIndex].dynamicLContainerNode :\n                null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return getParentLNode(tNode, embeddedView[PARENT]);\n        }\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getContainerNode(tViewNode, view);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParentNode, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            if (tNode.type === 3 /* Element */) {\n                var elementNode = getLNode(tNode, currentView);\n                executeNodeAction(action, renderer, parent_1, elementNode.native, beforeNode);\n                if (elementNode.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, elementNode.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainerNode = currentView[tNode.index];\n                executeNodeAction(action, renderer, parent_1, lContainerNode.native, beforeNode);\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                if (childContainerData[VIEWS].length) {\n                    currentView = childContainerData[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index].native;\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var parentNode = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        var parent = parentNode ? parentNode.native : null;\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (parent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, tContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        destroyLView(view);\n        detachView(lContainer, removeIndex, !!tContainer.detached);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getContainerNode(tNode, state).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentLNode(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getContainerNode(viewTNode, view);\n        if (container == null || container.data[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var parentLNode = getParentLNode(childTNode, currentView);\n        var parentEl = parentLNode ? parentLNode.native : null;\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var container = getContainerNode(parentTNode, currentView);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent.native, childEl, getBeforeNodeForView(index, views, container));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var node = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, node.native, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, container) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getLNode(viewTNode.child, view).native : container.native;\n        }\n        else {\n            return container.native;\n        }\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parentEl The parent element from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(tNode, child, currentView) {\n        var parentNative = getParentLNode(tNode, currentView).native;\n        if (child !== null && canInsertNativeNode(tNode, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, child) :\n                parentNative.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedLNode The node to process\n     * @param parentNode The last parent element to be processed\n     * @param tProjectionNode\n     * @param currentView Current LView\n     * @param projectionView Projection view\n     */\n    function appendProjectedNode(projectedLNode, projectedTNode, tProjectionNode, currentView, projectionView) {\n        appendChild(projectedLNode.native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(projectedLNode.native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = projectedLNode.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, projectedLNode.native);\n            }\n        }\n        else if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                var ngContainerChild = getLNode(ngContainerChildTNode, projectionView);\n                appendProjectedNode(ngContainerChild, ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (projectedLNode.dynamicLContainerNode) {\n            projectedLNode.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(projectedLNode.dynamicLContainerNode.native, tProjectionNode, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentNode() {\n        return previousOrParentTNode == null || previousOrParentTNode === viewData[HOST_NODE] ?\n            getHostElementNode(viewData) :\n            getLNode(previousOrParentTNode, viewData);\n    }\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.hostBindingStartIndex + any hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.hostBindingStartIndex;\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings(dirIndex, bindings[i + 1]);\n                bindingRootIndex = viewData[BINDING_INDEX] = bindingRootIndex + def.hostVars;\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[PARENT] = viewData;\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, nodeInjector, native, state) {\n        return {\n            native: native,\n            nodeInjector: nodeInjector,\n            data: state,\n            dynamicLContainerNode: null\n        };\n    }\n    function createNodeAtIndex(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        var isState = state != null;\n        var node = createLNodeObject(type, null, native, isState ? state : null);\n        var tNode;\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in tView.node.\n            tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            var tData = tView.data;\n            ngDevMode && assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n            viewData[adjustedIndex] = node;\n            if (tData[adjustedIndex] == null) {\n                var tNode_1 = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentTNode) {\n                    previousOrParentTNode.next = tNode_1;\n                    if (previousOrParentTNode.dynamicContainerNode)\n                        previousOrParentTNode.dynamicContainerNode.next = tNode_1;\n                }\n            }\n            tNode = tData[adjustedIndex];\n            if (!tView.firstChild && type === 3 /* Element */) {\n                tView.firstChild = tNode;\n            }\n            // Now link ourselves into the tree.\n            if (isParent && previousOrParentTNode) {\n                if (previousOrParentTNode.child == null && parentInSameView ||\n                    previousOrParentTNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentTNode.child = tNode;\n                }\n            }\n        }\n        // TODO: temporary, remove this when removing nodeInjector (bringing in fns to hello world)\n        if (index !== -1 && !(viewData[FLAGS] & 64 /* IsRoot */)) {\n            var parentLNode = type === 2 /* View */ ?\n                getContainerNode(tNode, state) :\n                getParentOrContainerNode(tNode, viewData);\n            parentLNode && (node.nodeInjector = parentLNode.nodeInjector);\n        }\n        // View nodes and host elements need to set their host node (components do not save host TNodes)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode &&\n                assertEqual(lViewData[HOST_NODE], null, 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = tNode;\n            if (lViewData[TVIEW].firstTemplatePass) {\n                lViewData[TVIEW].node = tNode;\n            }\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    /**\n     * When LNodes are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.hostBindingStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createNodeAtIndex(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(tView.hostBindings);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null, null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    function nativeNodeLocalRefExtractor(tNode, currentView) {\n        return getLNode(tNode, currentView).native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param lNode LNode for which directive and locals should be created\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from LNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = nativeNodeLocalRefExtractor; }\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, hostVars) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < hostVars; i++) {\n            tView.blueprint.push(NO_CHANGE);\n            viewData.push(NO_CHANGE);\n        }\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, previousOrParentTNode.index - HEADER_OFFSET);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : directives[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            hostBindingStartIndex: initialViewLength,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetComponentState();\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return viewData[HEADER_OFFSET];\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var node = getPreviousOrParentNode();\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(node.native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                node.native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = getTNode(index);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = getTNode(index);\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, hostNode);\n        if (directiveDef.template) {\n            hostNode.data[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx, directiveDef.hostVars);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var hostNode = getLNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(hostNode.native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        hostNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentTNode;\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, hostNode) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (hostNode) {\n            attachPatchData(hostNode.native, viewData);\n        }\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(hostNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(currentView, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            null // renderParent, set after node creation\n        ];\n    }\n    /**\n     * Creates an LContainerNode for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainerNode for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var lContainer = createLContainer(viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(tNode, viewData);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        viewData[previousOrParentTNode.index].data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var lContainer = viewData[previousOrParentTNode.index].data;\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        // Inline containers cannot have style bindings, so we can read the value directly\n        var container = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var lContainer = container.data;\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createNodeAtIndex(viewBlockId, 2 /* View */, null, null, null, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = readElementValue(viewData[adjustedElementIndex]);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                var lNode = projectedView[nodeToProject.index];\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(lNode, nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lViewData = readPatchedLViewData(component);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = getLElementFromComponent(component);\n        ngDevMode &&\n            assertDefined(hostNode, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var elementNode = getLElementFromComponent(component);\n        markViewDirty(elementNode.data);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    function getTNode(index) {\n        return tView.data[index + HEADER_OFFSET];\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            component = createRootComponent(elementNode, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(elementNode.data, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(elementNode, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at index 0 in directives array\n        var component = baseDirectiveCreate(0, componentDef.factory(), componentDef, elementNode);\n        if (componentDef.hostBindings)\n            queueHostBindingForCheck(0, componentDef.hostVars);\n        rootContext.components.push(component);\n        elementNode.data[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        setHostBindings(rootView[TVIEW].hostBindings);\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        // Root component is always created at dir index 0\n        queueInitHooks(0, def.onInit, def.doCheck, rootTView);\n        // Directive starting index 0, directive count 1 -> directive flags: 1\n        queueLifecycleHooks(1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][DIRECTIVES][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef), createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(elementNode, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                tElementNode = getTNode(0);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                var componentView = elementNode.data;\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createNodeAtIndex(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode(), getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node, tNode, hostView) {\n        // TODO: remove LNode arg when nodeInjector refactor is done\n        var nodeInjector = node.nodeInjector;\n        var parentLNode = getParentOrContainerNode(tNode, hostView);\n        var parentInjector = parentLNode && parentLNode.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            tNode: tNode,\n            view: hostView,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return createElementRef(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return createTemplateRef(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(previousTNode, _getViewData());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getOrCreateNodeInjector());\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getLNode(hostTNode, hostView).data;\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(di) {\n        var renderer = di.view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var tNode = injector.tNode;\n                var injectorView = injector.view;\n                var nodeFlags = tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = injectorView[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return injectorView[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = nodeInjector.view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, hostTView);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.view === injector.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(tNode, view) {\n        return new ElementRef$1(getLNode(tNode, view).native);\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function (_super) {\n        __extends(ElementRef$$1, _super);\n        function ElementRef$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ElementRef$$1;\n    }(ElementRef));\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(hostTNode, hostView) {\n        var hostLNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer = createLContainer(hostView, true);\n        var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var lContainerNode = createLNodeObject(0 /* Container */, hostLNode.nodeInjector, comment, lContainer);\n        lContainer[RENDER_PARENT] = getRenderParent(hostTNode, hostView);\n        appendChild(comment, hostTNode, hostView);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        hostLNode.dynamicLContainerNode = lContainerNode;\n        addToViewTree(hostView, hostTNode.index, lContainer);\n        return new ViewContainerRef$1(lContainer, hostTNode.dynamicContainerNode, hostTNode, hostView);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return createTemplateRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ViewContainerRef) {\n                return createContainerRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ElementRef) {\n                return createElementRef(this._lInjector.tNode, this._lInjector.view);\n            }\n            if (token === ChangeDetectorRef) {\n                return createViewRef(this._lInjector.tNode, this._lInjector.view, null);\n            }\n            if (token === Renderer2) {\n                return getOrCreateRenderer2(this._lInjector);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function (_super) {\n        __extends(ViewContainerRef$$1, _super);\n        function ViewContainerRef$$1(_lContainer, _tContainerNode, _hostTNode, _hostView) {\n            var _this = _super.call(this) || this;\n            _this._lContainer = _lContainer;\n            _this._tContainerNode = _tContainerNode;\n            _this._hostTNode = _hostTNode;\n            _this._hostView = _hostView;\n            _this._viewRefs = [];\n            return _this;\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                // TODO: Remove LNode lookup when removing LNode.nodeInjector\n                var injector = getOrCreateNodeInjectorForNode(this._getHostNode(), this._hostTNode, this._hostView);\n                return createElementRef(injector.tNode, injector.view);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                // TODO: Remove LNode lookup when removing LNode.nodeInjector\n                var injector = getOrCreateNodeInjectorForNode(this._getHostNode(), this._hostTNode, this._hostView);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostTNode, this._hostView).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            while (this._lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () { return this._lContainer[VIEWS].length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainer, this._tContainerNode, this._hostView, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lView = viewRef._view;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._tContainerNode.parent.index);\n            var container$$1 = this._getHostNode().dynamicLContainerNode;\n            var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], container$$1);\n            addRemoveViewFromContainer(lView, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainer, this._tContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainer, adjustedIdx, !!this._tContainerNode.detached);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainer[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        ViewContainerRef$$1.prototype._getHostNode = function () { return getLNode(this._hostTNode, this._hostView); };\n        return ViewContainerRef$$1;\n    }(ViewContainerRef));\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(hostTNode, hostView) {\n        var hostNode = getLNode(hostTNode, hostView);\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new TemplateRef$1(hostView, createElementRef(hostTNode, hostView), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n    var TemplateRef$1 = /** @class */ (function (_super) {\n        __extends(TemplateRef$$1, _super);\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            var _this = _super.call(this) || this;\n            _this._declarationParentView = _declarationParentView;\n            _this.elementRef = elementRef;\n            _this._tView = _tView;\n            _this._renderer = _renderer;\n            _this._queries = _queries;\n            return _this;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, container$$1, tContainerNode, hostView, index) {\n            var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (container$$1) {\n                insertView(lView, container$$1, hostView, index, tContainerNode.parent.index);\n            }\n            renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef(lView, context, -1);\n            viewRef._tViewNode = lView[HOST_NODE];\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }(TemplateRef));\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    // TODO: Remove LNode arg when we remove dynamicContainerNode\n    function appendI18nNode(node, tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(node.native, tNode, viewData);\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(node.dynamicLContainerNode.native, tNode, viewData);\n            return tNode.dynamicContainerNode;\n        }\n        return tNode;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementIndex = instruction & 536870911 /* IndexMask */;\n                    var element$$1 = load(elementIndex);\n                    var elementTNode = getTNode(elementIndex);\n                    localPreviousTNode =\n                        appendI18nNode(element$$1, elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    var node = load(nodeIndex);\n                    localPreviousTNode =\n                        appendI18nNode(node, getTNode(nodeIndex), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var lastNodeIndex = viewData.length - 1 - HEADER_OFFSET;\n                    var textTNode = createNodeAtIndex(lastNodeIndex, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(loadElement(lastNodeIndex), textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(removeIndex);\n                    var removedTNode = getTNode(removeIndex);\n                    removeChild(removedTNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedTNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(removedTNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedTNode.dynamicContainerNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |--------consts--------|----------------vars----------------|------ hostVars (dir1) ------|\n     * ---------------------------------------------------------------------------------------------\n     * | nodes / refs / pipes | bindings | pure function bindings  | host bindings  | host slots |\n     * ---------------------------------------------------------------------------------------------\n     *                        ^                                    ^\n     *             TView.bindingStartIndex            TView.hostBindingStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the hostBindingStartIndex +\n     * any hostVars in directives evaluated before it.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].directives;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(tNode, currentView, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(tNode, currentView, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(tNode, currentView, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(tNode, currentView, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(tNode, currentView, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµinjectRenderer2': injectRenderer2,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadDirective': loadDirective,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind1,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStylingProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: metadata.animations || null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.6+26.sha-d5f47d6');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        Object.defineProperty(DebugRenderer2.prototype, \"debugContext\", {\n            get: function () { return this.debugContextFactory(); },\n            enumerable: true,\n            configurable: true\n        });\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.debugContext;\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element$$1, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element$$1, renderData);\n            renderer.debugContextFactory = function () { return new Render3DebugContext(_getViewData()); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(viewData) {\n            this.viewData = viewData;\n            // The LNode will be created next and appended to viewData\n            this.nodeIndex = viewData ? viewData.length : null;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return this.viewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () {\n                if (this.nodeIndex !== null) {\n                    var lElementNode = this.view[this.nodeIndex];\n                    var nodeInjector = lElementNode.nodeInjector;\n                    if (nodeInjector) {\n                        return new NodeInjector(nodeInjector);\n                    }\n                }\n                return Injector.NULL;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () {\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var tView = this.view[TVIEW];\n                var components = tView.components;\n                return (components && components.indexOf(this.nodeIndex) == -1) ?\n                    null :\n                    this.view[this.nodeIndex].data[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            // TODO(vicb): add view providers when supported\n            get: function () {\n                var matchedDirectives = [];\n                // TODO(vicb): why/when\n                if (this.nodeIndex === null) {\n                    return matchedDirectives;\n                }\n                var directives = this.view[DIRECTIVES];\n                if (directives) {\n                    var currentNode = this.view[this.nodeIndex];\n                    for (var dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n                        var directive = directives[dirIndex];\n                        if (getLElementNode(directive) === currentNode) {\n                            matchedDirectives.push(directive.constructor);\n                        }\n                    }\n                }\n                return matchedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () {\n                // TODO(vicb): implement retrieving references\n                throw new Error('Not implemented yet in ivy');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            get: function () {\n                if (this.nodeIndex === null) {\n                    return null;\n                }\n                var lNode = this.view[this.nodeIndex];\n                return lNode.view[CONTEXT];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(vicb): check previous implementation\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectRenderer2 = injectRenderer2;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.ÉµloadDirective = loadDirective;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStylingProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}