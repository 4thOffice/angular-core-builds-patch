{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ΔdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjectable","ΔdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","Δinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","ɵɵinject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","angularCoreDiEnv","ΔgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","tokens","defOrWrappedDef","parents","ngModule","defName","isDuplicate","add","imported","pop","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","slice","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","resolvedProvider","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$1","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ΔdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ΔsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ΔdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ΔsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ΔdefineBase","baseDefinition","ΔdefineDirective","ΔdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ΔresolveWindow","element","ownerDocument","defaultView","ΔresolveDocument","ΔresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ΔenableBindings","ΔdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ΔrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","RendererStyleFlags3","_currentNamespace","ΔnamespaceSVG","ΔnamespaceMathML","ΔnamespaceHTML","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ΔgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ΔsanitizeHtml","getSanitizer","sanitize","HTML","ΔsanitizeStyle","unsafeStyle","STYLE","ΔsanitizeUrl","unsafeUrl","URL","ΔsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ΔsanitizeScript","unsafeScript","SCRIPT","ΔsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ΔdefaultStyleSanitizer","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ΔallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","Δcontainer","containerInternal","addTContainerToQueries","Δtemplate","tContainerNode","ΔcontainerRefreshStart","ΔcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","addNode","comment","createComment","Δreference","getContextLView","Δload","ΔdirectiveInject","ΔinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","Δstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex","initstyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ΔstyleProp","styleIndex","valueToAdd","resolveStylePropValue","getStylingContext","ΔclassProp","classIndex","booleanOrNull","ΔstyleMap","styleInputVal","forceStylesAsString","ΔclassMap","classes","classInputVal","forceClassesAsString","ΔstylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getCachedStylingContext","ΔelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","currentQueries","clone","ΔelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","Δelement","ΔelementAttribute","strValue","ΔelementHostAttrs","hostElementIndex","ΔelementContainerStart","ΔelementContainerEnd","ΔembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ΔembeddedViewEnd","viewHost","ΔgetCurrentView","isPromise","isObservable","subscribe","Δlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ΔcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ΔnextContext","level","nextContextImpl","walkUpViews","nestingLevel","ΔprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","Δprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","Δproperty","bindReconciledValue","Δbind","ΔelementProperty","ΔcomponentHostSyntheticProperty","ΔinterpolationV","Δinterpolation1","v0","Δinterpolation2","i0","v1","Δinterpolation3","i1","v2","Δinterpolation4","i2","v3","Δinterpolation5","i3","v4","Δinterpolation6","i4","v5","Δinterpolation7","i5","v6","Δinterpolation8","i6","v7","ΔpropertyInterpolate","ΔpropertyInterpolate1","interpolatedValue","ΔpropertyInterpolate2","ΔpropertyInterpolate3","ΔpropertyInterpolate4","ΔpropertyInterpolate5","ΔpropertyInterpolate6","ΔpropertyInterpolate7","ΔpropertyInterpolate8","ΔpropertyInterpolateV","Δselect","Δtext","textNative","ΔtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ΔNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ΔInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ΔProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","flatten","mapFn","ngI18nClosureMode","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","Δi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","Δi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","Δi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","Δi18n","Δi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","Δi18nExp","expression","Δi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","Δi18nLocalize","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","moduleRef","ΔpureFunction0","slotOffset","pureFn","thisArg","ΔpureFunction1","exp","ΔpureFunction2","ΔpureFunction3","ΔpureFunction4","ΔpureFunction5","exp5","ΔpureFunction6","exp6","ΔpureFunction7","exp7","ΔpureFunction8","exp8","ΔpureFunctionV","exps","Δpipe","pipeName","getPipeDef$1","pipeInstance","ΔpipeBind1","unwrapValue$1","isPure","transform","ΔpipeBind2","ΔpipeBind3","ΔpipeBind4","ΔpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","_static","storeCleanupWithContext","ΔqueryRefresh","queryListImpl","ΔstaticViewQuery","ΔviewQuery","ΔloadViewQuery","ΔcontentQuery","contentQuery","tViewContentQueries","ΔstaticContentQuery","ΔloadContentQuery","ΔtemplateRefExtractor","angularCoreEnv","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","_loop_1","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+183.sha-d20b0f4.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ΔdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ΔdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ΔdefineInjectable;\n    /**\n     * @deprecated delete before v8. Use `defineInjectable`, which is also deprecated, but will be\n     * around until v10.\n     * @publicApi\n     */\n    var ɵɵdefineInjectable = ΔdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ΔdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function Δinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = Δinject;\n    /**\n     * @deprecated delete by v8, use `inject`.\n     * @codeGenApi\n     */\n    var ɵɵinject = Δinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(Δinject(type, flags));\n            }\n            else {\n                args.push(Δinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'Δinject': Δinject,\n        'ΔgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            if (parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                    parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return Δinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return Δinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ΔdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ΔdefineInjectable({ factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ΔsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$1;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$1;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$1;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ΔdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ΔdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ΔdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ΔdefineDirective = ΔdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ΔdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'function')\n            return value.name || value;\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type;\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ΔrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ΔnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ΔgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ΔgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ΔgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ΔsanitizeResourceUrl;\n        }\n        return ΔsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ΔdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ΔsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(templateFn, rf, context) {\n        ΔnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ΔallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, lContainer) {\n        var containerNative = lContainer[NATIVE];\n        if (index + 1 < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            var view = lContainer[CONTAINER_HEADER_OFFSET + index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function Δcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function Δtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ΔcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ΔcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function Δreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function Δload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ΔdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return Δinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ΔinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function Δstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initstyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ΔstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ΔclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ΔstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ΔelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ΔelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function Δelement(index, name, attrs, localRefs) {\n        ΔelementStart(index, name, attrs, localRefs);\n        ΔelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ΔelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ΔelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ΔelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ΔelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ΔembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ΔembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ΔgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function Δlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ΔcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ΔnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ΔprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function Δprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function Δproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = Δbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return Δproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function Δbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ΔelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n        }\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ΔcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ΔinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /////////////////////////////////////////////////////////////////////\n    /// NEW INSTRUCTIONS\n    /////////////////////////////////////////////////////////////////////\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate(propName, v0, sanitizer) {\n        ΔpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ΔpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ΔpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ΔpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ΔinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ΔpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function Δselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `Δselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function Δtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ΔtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ΔNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ΔInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ΔNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ΔdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ΔdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ΔProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-rc.0+183.sha-d20b0f4.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(Δinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list, mapFn) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(mapFn ? mapFn(item) : item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function Δi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function Δi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function Δi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ΔelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ΔelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ΔtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = Δload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function Δi18n(index, message, subTemplateIndex) {\n        Δi18nStart(index, message, subTemplateIndex);\n        Δi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function Δi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ΔelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function Δi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function Δi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function Δi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            var moduleType = this.moduleType;\n            var moduleRef = new NgModuleRef$1(moduleType, parentInjector);\n            var ngModuleDef = getNgModuleDef(moduleType);\n            ngModuleDef && ngModuleDef.id &&\n                registerNgModuleType(ngModuleDef.id, moduleType);\n            return moduleRef;\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ΔpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function Δpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ?\n            ΔpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ΔpipeBindV(index, slotOffset, values) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are spliced before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.splice(-1, 0, matchingValue) :\n            query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ΔqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ΔstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ΔviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ΔloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return Δload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ΔstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ΔcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ΔloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ΔtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ΔdefineBase': ΔdefineBase,\n        'ΔdefineComponent': ΔdefineComponent,\n        'ΔdefineDirective': ΔdefineDirective,\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'ΔdefineNgModule': ΔdefineNgModule,\n        'ΔdefinePipe': ΔdefinePipe,\n        'ΔdirectiveInject': ΔdirectiveInject,\n        'ΔgetFactoryOf': ΔgetFactoryOf,\n        'ΔgetInheritedFactory': ΔgetInheritedFactory,\n        'Δinject': Δinject,\n        'ΔinjectAttribute': ΔinjectAttribute,\n        'ΔtemplateRefExtractor': ΔtemplateRefExtractor,\n        'ΔNgOnChangesFeature': ΔNgOnChangesFeature,\n        'ΔProvidersFeature': ΔProvidersFeature,\n        'ΔInheritDefinitionFeature': ΔInheritDefinitionFeature,\n        'ΔelementAttribute': ΔelementAttribute,\n        'Δbind': Δbind,\n        'Δcontainer': Δcontainer,\n        'ΔnextContext': ΔnextContext,\n        'ΔcontainerRefreshStart': ΔcontainerRefreshStart,\n        'ΔcontainerRefreshEnd': ΔcontainerRefreshEnd,\n        'ΔnamespaceHTML': ΔnamespaceHTML,\n        'ΔnamespaceMathML': ΔnamespaceMathML,\n        'ΔnamespaceSVG': ΔnamespaceSVG,\n        'ΔenableBindings': ΔenableBindings,\n        'ΔdisableBindings': ΔdisableBindings,\n        'ΔallocHostVars': ΔallocHostVars,\n        'ΔelementStart': ΔelementStart,\n        'ΔelementEnd': ΔelementEnd,\n        'Δelement': Δelement,\n        'ΔelementContainerStart': ΔelementContainerStart,\n        'ΔelementContainerEnd': ΔelementContainerEnd,\n        'ΔpureFunction0': ΔpureFunction0,\n        'ΔpureFunction1': ΔpureFunction1,\n        'ΔpureFunction2': ΔpureFunction2,\n        'ΔpureFunction3': ΔpureFunction3,\n        'ΔpureFunction4': ΔpureFunction4,\n        'ΔpureFunction5': ΔpureFunction5,\n        'ΔpureFunction6': ΔpureFunction6,\n        'ΔpureFunction7': ΔpureFunction7,\n        'ΔpureFunction8': ΔpureFunction8,\n        'ΔpureFunctionV': ΔpureFunctionV,\n        'ΔgetCurrentView': ΔgetCurrentView,\n        'ΔrestoreView': ΔrestoreView,\n        'Δinterpolation1': Δinterpolation1,\n        'Δinterpolation2': Δinterpolation2,\n        'Δinterpolation3': Δinterpolation3,\n        'Δinterpolation4': Δinterpolation4,\n        'Δinterpolation5': Δinterpolation5,\n        'Δinterpolation6': Δinterpolation6,\n        'Δinterpolation7': Δinterpolation7,\n        'Δinterpolation8': Δinterpolation8,\n        'ΔinterpolationV': ΔinterpolationV,\n        'Δlistener': Δlistener,\n        'Δload': Δload,\n        'Δprojection': Δprojection,\n        'ΔelementProperty': ΔelementProperty,\n        'ΔcomponentHostSyntheticProperty': ΔcomponentHostSyntheticProperty,\n        'ΔcomponentHostSyntheticListener': ΔcomponentHostSyntheticListener,\n        'ΔpipeBind1': ΔpipeBind1,\n        'ΔpipeBind2': ΔpipeBind2,\n        'ΔpipeBind3': ΔpipeBind3,\n        'ΔpipeBind4': ΔpipeBind4,\n        'ΔpipeBindV': ΔpipeBindV,\n        'ΔprojectionDef': ΔprojectionDef,\n        'Δproperty': Δproperty,\n        'ΔpropertyInterpolate': ΔpropertyInterpolate,\n        'ΔpropertyInterpolate1': ΔpropertyInterpolate1,\n        'ΔpropertyInterpolate2': ΔpropertyInterpolate2,\n        'ΔpropertyInterpolate3': ΔpropertyInterpolate3,\n        'ΔpropertyInterpolate4': ΔpropertyInterpolate4,\n        'ΔpropertyInterpolate5': ΔpropertyInterpolate5,\n        'ΔpropertyInterpolate6': ΔpropertyInterpolate6,\n        'ΔpropertyInterpolate7': ΔpropertyInterpolate7,\n        'ΔpropertyInterpolate8': ΔpropertyInterpolate8,\n        'ΔpropertyInterpolateV': ΔpropertyInterpolateV,\n        'Δpipe': Δpipe,\n        'ΔqueryRefresh': ΔqueryRefresh,\n        'ΔviewQuery': ΔviewQuery,\n        'ΔstaticViewQuery': ΔstaticViewQuery,\n        'ΔstaticContentQuery': ΔstaticContentQuery,\n        'ΔloadViewQuery': ΔloadViewQuery,\n        'ΔcontentQuery': ΔcontentQuery,\n        'ΔloadContentQuery': ΔloadContentQuery,\n        'Δreference': Δreference,\n        'ΔelementHostAttrs': ΔelementHostAttrs,\n        'ΔclassMap': ΔclassMap,\n        'Δstyling': Δstyling,\n        'ΔstyleMap': ΔstyleMap,\n        'ΔstyleProp': ΔstyleProp,\n        'ΔstylingApply': ΔstylingApply,\n        'ΔclassProp': ΔclassProp,\n        'Δselect': Δselect,\n        'Δtemplate': Δtemplate,\n        'Δtext': Δtext,\n        'ΔtextBinding': ΔtextBinding,\n        'ΔembeddedViewStart': ΔembeddedViewStart,\n        'ΔembeddedViewEnd': ΔembeddedViewEnd,\n        'Δi18n': Δi18n,\n        'Δi18nAttributes': Δi18nAttributes,\n        'Δi18nExp': Δi18nExp,\n        'Δi18nStart': Δi18nStart,\n        'Δi18nEnd': Δi18nEnd,\n        'Δi18nApply': Δi18nApply,\n        'Δi18nPostprocess': Δi18nPostprocess,\n        'Δi18nLocalize': Δi18nLocalize,\n        'ΔresolveWindow': ΔresolveWindow,\n        'ΔresolveDocument': ΔresolveDocument,\n        'ΔresolveBody': ΔresolveBody,\n        'ΔsetComponentScope': ΔsetComponentScope,\n        'ΔsetNgModuleScope': ΔsetNgModuleScope,\n        'ΔsanitizeHtml': ΔsanitizeHtml,\n        'ΔsanitizeStyle': ΔsanitizeStyle,\n        'ΔdefaultStyleSanitizer': ΔdefaultStyleSanitizer,\n        'ΔsanitizeResourceUrl': ΔsanitizeResourceUrl,\n        'ΔsanitizeScript': ΔsanitizeScript,\n        'ΔsanitizeUrl': ΔsanitizeUrl,\n        'ΔsanitizeUrlOrResourceUrl': ΔsanitizeUrlOrResourceUrl,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports, unwrapModuleWithProvidersImports).forEach(verifySemanticsOfNgModuleDef);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ΔdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(Δinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ΔdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ΔdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ΔdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(Δinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ΔdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ΔdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(Δinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ΔdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(Δinject(NgZone), Δinject(Console), Δinject(Injector), Δinject(ErrorHandler), Δinject(ComponentFactoryResolver), Δinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ΔdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(Δinject(Compiler), Δinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ΔdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ΔdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(Δinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ΔdefineInjectable = ΔdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ΔdefineInjector = ΔdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.Δinject = Δinject;\n    exports.inject = inject;\n    exports.ɵɵinject = ɵɵinject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ΔdefineBase = ΔdefineBase;\n    exports.ΔdefineComponent = ΔdefineComponent;\n    exports.ΔdefineDirective = ΔdefineDirective;\n    exports.ΔdefinePipe = ΔdefinePipe;\n    exports.ΔdefineNgModule = ΔdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ΔdirectiveInject = ΔdirectiveInject;\n    exports.ΔinjectAttribute = ΔinjectAttribute;\n    exports.ΔgetFactoryOf = ΔgetFactoryOf;\n    exports.ΔgetInheritedFactory = ΔgetInheritedFactory;\n    exports.ΔsetComponentScope = ΔsetComponentScope;\n    exports.ΔsetNgModuleScope = ΔsetNgModuleScope;\n    exports.ΔtemplateRefExtractor = ΔtemplateRefExtractor;\n    exports.ΔProvidersFeature = ΔProvidersFeature;\n    exports.ΔInheritDefinitionFeature = ΔInheritDefinitionFeature;\n    exports.ΔNgOnChangesFeature = ΔNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.Δcontainer = Δcontainer;\n    exports.ΔnextContext = ΔnextContext;\n    exports.ΔelementStart = ΔelementStart;\n    exports.ΔnamespaceHTML = ΔnamespaceHTML;\n    exports.ΔnamespaceMathML = ΔnamespaceMathML;\n    exports.ΔnamespaceSVG = ΔnamespaceSVG;\n    exports.Δelement = Δelement;\n    exports.Δlistener = Δlistener;\n    exports.Δtext = Δtext;\n    exports.ΔembeddedViewStart = ΔembeddedViewStart;\n    exports.Δprojection = Δprojection;\n    exports.Δbind = Δbind;\n    exports.Δinterpolation1 = Δinterpolation1;\n    exports.Δinterpolation2 = Δinterpolation2;\n    exports.Δinterpolation3 = Δinterpolation3;\n    exports.Δinterpolation4 = Δinterpolation4;\n    exports.Δinterpolation5 = Δinterpolation5;\n    exports.Δinterpolation6 = Δinterpolation6;\n    exports.Δinterpolation7 = Δinterpolation7;\n    exports.Δinterpolation8 = Δinterpolation8;\n    exports.ΔinterpolationV = ΔinterpolationV;\n    exports.ΔpipeBind1 = ΔpipeBind1;\n    exports.ΔpipeBind2 = ΔpipeBind2;\n    exports.ΔpipeBind3 = ΔpipeBind3;\n    exports.ΔpipeBind4 = ΔpipeBind4;\n    exports.ΔpipeBindV = ΔpipeBindV;\n    exports.ΔpureFunction0 = ΔpureFunction0;\n    exports.ΔpureFunction1 = ΔpureFunction1;\n    exports.ΔpureFunction2 = ΔpureFunction2;\n    exports.ΔpureFunction3 = ΔpureFunction3;\n    exports.ΔpureFunction4 = ΔpureFunction4;\n    exports.ΔpureFunction5 = ΔpureFunction5;\n    exports.ΔpureFunction6 = ΔpureFunction6;\n    exports.ΔpureFunction7 = ΔpureFunction7;\n    exports.ΔpureFunction8 = ΔpureFunction8;\n    exports.ΔpureFunctionV = ΔpureFunctionV;\n    exports.ΔgetCurrentView = ΔgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ΔrestoreView = ΔrestoreView;\n    exports.ΔcontainerRefreshStart = ΔcontainerRefreshStart;\n    exports.ΔcontainerRefreshEnd = ΔcontainerRefreshEnd;\n    exports.ΔqueryRefresh = ΔqueryRefresh;\n    exports.ΔviewQuery = ΔviewQuery;\n    exports.ΔstaticViewQuery = ΔstaticViewQuery;\n    exports.ΔstaticContentQuery = ΔstaticContentQuery;\n    exports.ΔloadViewQuery = ΔloadViewQuery;\n    exports.ΔcontentQuery = ΔcontentQuery;\n    exports.ΔloadContentQuery = ΔloadContentQuery;\n    exports.ΔelementEnd = ΔelementEnd;\n    exports.ΔelementProperty = ΔelementProperty;\n    exports.Δproperty = Δproperty;\n    exports.ΔpropertyInterpolate = ΔpropertyInterpolate;\n    exports.ΔpropertyInterpolate1 = ΔpropertyInterpolate1;\n    exports.ΔpropertyInterpolate2 = ΔpropertyInterpolate2;\n    exports.ΔpropertyInterpolate3 = ΔpropertyInterpolate3;\n    exports.ΔpropertyInterpolate4 = ΔpropertyInterpolate4;\n    exports.ΔpropertyInterpolate5 = ΔpropertyInterpolate5;\n    exports.ΔpropertyInterpolate6 = ΔpropertyInterpolate6;\n    exports.ΔpropertyInterpolate7 = ΔpropertyInterpolate7;\n    exports.ΔpropertyInterpolate8 = ΔpropertyInterpolate8;\n    exports.ΔpropertyInterpolateV = ΔpropertyInterpolateV;\n    exports.ΔcomponentHostSyntheticProperty = ΔcomponentHostSyntheticProperty;\n    exports.ΔcomponentHostSyntheticListener = ΔcomponentHostSyntheticListener;\n    exports.ΔprojectionDef = ΔprojectionDef;\n    exports.Δreference = Δreference;\n    exports.ΔenableBindings = ΔenableBindings;\n    exports.ΔdisableBindings = ΔdisableBindings;\n    exports.ΔallocHostVars = ΔallocHostVars;\n    exports.ΔelementAttribute = ΔelementAttribute;\n    exports.ΔelementContainerStart = ΔelementContainerStart;\n    exports.ΔelementContainerEnd = ΔelementContainerEnd;\n    exports.Δstyling = Δstyling;\n    exports.ΔstyleMap = ΔstyleMap;\n    exports.ΔclassMap = ΔclassMap;\n    exports.ΔstyleProp = ΔstyleProp;\n    exports.ΔstylingApply = ΔstylingApply;\n    exports.ΔclassProp = ΔclassProp;\n    exports.ΔelementHostAttrs = ΔelementHostAttrs;\n    exports.Δselect = Δselect;\n    exports.ΔtextBinding = ΔtextBinding;\n    exports.Δtemplate = Δtemplate;\n    exports.ΔembeddedViewEnd = ΔembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.Δload = Δload;\n    exports.Δpipe = Δpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.Δi18n = Δi18n;\n    exports.Δi18nAttributes = Δi18nAttributes;\n    exports.Δi18nExp = Δi18nExp;\n    exports.Δi18nStart = Δi18nStart;\n    exports.Δi18nEnd = Δi18nEnd;\n    exports.Δi18nApply = Δi18nApply;\n    exports.Δi18nPostprocess = Δi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.Δi18nLocalize = Δi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ΔresolveWindow = ΔresolveWindow;\n    exports.ΔresolveDocument = ΔresolveDocument;\n    exports.ΔresolveBody = ΔresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ΔsanitizeHtml = ΔsanitizeHtml;\n    exports.ΔsanitizeStyle = ΔsanitizeStyle;\n    exports.ΔdefaultStyleSanitizer = ΔdefaultStyleSanitizer;\n    exports.ΔsanitizeScript = ΔsanitizeScript;\n    exports.ΔsanitizeUrl = ΔsanitizeUrl;\n    exports.ΔsanitizeResourceUrl = ΔsanitizeResourceUrl;\n    exports.ΔsanitizeUrlOrResourceUrl = ΔsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}