{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","compiler","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","def","directives","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","enumerable","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","remove","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","insertBefore","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","fillProperties","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","destroy","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","stringify$1","loadInternal","readElementValue","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeChildOfElement","canInsertNativeChildOfView","grandParentContainer","canInsertNativeNode","grandParent","nativeInsertBefore","appendChild","renderParent","getRenderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","sanitizer","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","addClass","removeClass","isDirtyYes","adjustedIndex","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","CIRCULAR$2","getRenderer","getRendererFactory","previousOrParentNode","isParent","currentQueries","currentElementNode","getCurrentSanitizer","getCurrentView","_getViewData","restoreView","viewToRestore","contextViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","oldView","leaveView","creationOnly","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","setHostBindings","hostBindings","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","template","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","NO_CHANGE","element_1","loadElement","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","stylingContext","load","allocStylingContext","lElement","templateStyleContext","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","styles","updateStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadDirective","loadQueryList","queryListIdx","loadElementInternal","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","ViewEncapsulation","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","InheritDefinitionFeature","definition","superType","getSuperType","_loop_1","e_1","superDef","isComponentDef","baseDef","ngBaseDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","rootSelectorOrNode","ElementRef","nativeElement","NgModuleRef","NgModuleFactory","NgModuleFactoryLoader","moduleFactories","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","QueryList","_results","changes","filter","reduce","init","toArray","reset","flatten$1","list","flat","flatItem","last","notifyOnChanges","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","RendererStyleFlags2","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ViewRef$1","_view","_appRef","_viewContainerRef","_lViewNode","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","isInternalRootView","elementNode","componentTag","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","location","NG_ELEMENT_ID","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","b6","b5","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","bloomHash","bloomHashBit","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","formerInjector","startInjector","b7","ReadFromInjectorFn","read","ElementRef$1","ElementRef$$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","NodeInjector","_lInjector","ViewContainerRef$$1","_lContainerNode","_hostNode","_viewRefs","parentLInjector","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","ngModuleRef","contextInjector","insert","move","newIndex","shift","TemplateRef$1","TemplateRef$$1","_declarationParentView","_tView","_renderer","_queries","createEmbeddedViewNode","declarationView","PublicFeature","i18nTagRegex","appendI18nNode","previousNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","LQueries_","deep","shallow","track","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten","memoryIndex","getCurrentQueries","QueryType","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","Console_Factory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","el","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","Éµa","Éµb","ÉµC","Éµx","ÉµcR","Éµcr","Éµd","Éµql","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","ÉµgV","ÉµrV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµcp","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµQr","ÉµrS","Éµr","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","Éµzh","Éµzs","Éµzss","Éµzr","Éµzc","sanitizeScript","unsafeScript","SCRIPT","Éµzu","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$2","out","expandModuleWithProviders","isModuleWithProviders","wrapReference","directiveMetadata","extractHostBindings","parseHostBindings","listeners","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","srcMeta","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNC","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI1","i18nInterpolation1","ÉµiI2","i18nInterpolation2","ÉµiI3","i18nInterpolation3","idx","ÉµiI4","i18nInterpolation4","b1","ÉµiI5","i18nInterpolation5","ÉµiI6","i18nInterpolation6","ÉµiI7","i18nInterpolation7","b2","ÉµiI8","i18nInterpolation8","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµsanitizeUrl","ÉµsanitizeResourceUrl","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.0+43.sha-7bf5a43\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/compiler')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators', '@angular/compiler'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators,global.ng.compiler));\n}(this, (function (exports,rxjs,operators,compiler) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * #### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * #### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            debugger;\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __global$1 = typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global;\n    function ngDevModeResetPerfCounters() {\n        __global$1.ngDevMode = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns wether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /** Retrieves an element value from the provided `viewData`.\n      *\n      * Elements that are read may be wrapped in a style context,\n      * therefore reading the value may involve unwrapping that.\n      */\n    function loadElementInternal(index, arr) {\n        var value = loadInternal(index, arr);\n        return readElementValue(value);\n    }\n    function readElementValue(value) {\n        return (Array.isArray(value) ? value[0] : value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return readElementValue(viewData[node.tNode.child.index]);\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n    }\n    /**\n     * Retrieves render parent LElementNode for a given view.\n     * Might be null if a view is not yet attatched to any container.\n     */\n    function getRenderParent(viewNode) {\n        var container = getParentLNode(viewNode);\n        return container ? container.data[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]).native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function canInsertNativeChildOfElement(parent, currentView) {\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    function canInsertNativeChildOfView(parent) {\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var grandParentContainer = getParentLNode(parent);\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 4 /* ElementContainer */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(parent, currentView);\n        }\n        else if (parent.tNode.type === 4 /* ElementContainer */) {\n            // Parent is an element container (ng-container).\n            // Its grand-parent might be an element, view or a sequence of ng-container parents.\n            var grandParent = getParentLNode(parent);\n            while (grandParent !== null && grandParent.tNode.type === 4 /* ElementContainer */) {\n                grandParent = getParentLNode(grandParent);\n            }\n            if (grandParent === null) {\n                return false;\n            }\n            else if (grandParent.tNode.type === 3 /* Element */) {\n                return canInsertNativeChildOfElement(grandParent, currentView);\n            }\n            else {\n                return canInsertNativeChildOfView(grandParent);\n            }\n        }\n        else {\n            // Parent is a View.\n            return canInsertNativeChildOfView(parent);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n            }\n            else if (parent.tNode.type === 4 /* ElementContainer */) {\n                var beforeNode = parent.native;\n                var grandParent = getParentLNode(parent);\n                if (grandParent.tNode.type === 2 /* View */) {\n                    var renderParent = getRenderParent(grandParent);\n                    nativeInsertBefore(renderer, renderParent.native, child, beforeNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, grandParent.native, child, beforeNode);\n                }\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(lElement, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[0 /* ElementPosition */] = lElement;\n        return context;\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 6 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var ignoreAllClassUpdates = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (typeof classes == 'string') {\n            var cachedClassString = context[5 /* CachedCssClassString */];\n            if (cachedClassString && cachedClassString === classes) {\n                ignoreAllClassUpdates = true;\n            }\n            else {\n                context[5 /* CachedCssClassString */] = classes;\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n        }\n        else {\n            classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            context[5 /* CachedCssClassString */] = null;\n        }\n        classes = (classes || EMPTY_OBJ);\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (!ignoreAllClassUpdates || !isClassBased_2) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (valueToCompare !== newValue) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (initialValue !== newValue) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            if (ignoreAllClassUpdates && isClassBased_3)\n                break;\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased_3);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            if (ignoreAllClassUpdates && isClassBased_4)\n                break;\n            var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n            context.push(flag, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[0 /* ElementPosition */].native;\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    var currentElementNode = null;\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = contextViewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData ? viewData[INJECTOR$1] : null,\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n            null // declarationView\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, declarationView, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        if (viewNode.data[PARENT] == null && viewNode.data[CONTEXT] && !tView.template) {\n            // This is a root view inside the view tree\n            tickRootContext(viewNode.data[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentNode = null;\n                oldView = enterView(viewNode.data, viewNode);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentNode = _previousOrParentNode;\n            }\n        }\n        return viewNode;\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        currentElementNode = node;\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        ngDevMode && assertNodeOfPossibleTypes(previousOrParentNode, 3 /* Element */);\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n        currentElementNode = null;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = loadElement(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = loadElement(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var lElement = currentElementNode;\n        var tNode = lElement.tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!Array.isArray(stylingContext)) {\n            var lElement = stylingContext;\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] =\n                allocStylingContext(lElement, tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param styleName Name of property. Because it is going to DOM this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = loadElement(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, instance, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck();\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        queries && queries.addNode(node); // check if a given container node matches\n        queueLifecycleHooks(node.tNode.flags, tView);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = loadElement(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDescendantViews();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            detectChangesInternal(hostView, element, hostView[CONTEXT]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    function loadElement(index) {\n        return loadElementInternal(index, viewData);\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            rootContext.components.push(component);\n            elementNode.data[CONTEXT] = component;\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var elementNode = _getComponentHostLElementNode(component);\n        // Root component is always created at dir index 0\n        var tView = elementNode.view[TVIEW];\n        queueInitHooks(0, def.onInit, def.doCheck, tView);\n        queueLifecycleHooks(elementNode.tNode.flags, tView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory() { return new Compiler(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory() { return new SystemJsNgModuleLoader(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._lViewNode = null;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n            var hostNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef.rendererType)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n                elementNode.data[CONTEXT] = component;\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                LifecycleHooksFeature(component, this.componentDef);\n                // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = elementNode.tNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            var lNode = createLNode(++index, 3 /* Element */, nodeList[j], null, null);\n                            if (previousTNode) {\n                                previousTNode.next = lNode.tNode;\n                            }\n                            else {\n                                firstTNode = lNode.tNode;\n                            }\n                            previousTNode = lNode.tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(elementNode, elementNode.data[TVIEW], component, 1 /* Create */);\n                elementNode.data[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, hostNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._lViewNode.tNode.child = elementNode.tNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n            _this.injector = injector;\n            _this.location = new ElementRef(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        if (b7) {\n            b6 ? (b5 ? (injector.bf7 |= mask) : (injector.bf6 |= mask)) :\n                (b5 ? (injector.bf5 |= mask) : (injector.bf4 |= mask));\n        }\n        else {\n            b6 ? (b5 ? (injector.bf3 |= mask) : (injector.bf2 |= mask)) :\n                (b5 ? (injector.bf1 |= mask) : (injector.bf0 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null,\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef$1(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef$1(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(nodeInjector, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash !== null) {\n            var injector = nodeInjector;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === nodeInjector &&\n                    (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBit(token) {\n        var id = token[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id & BLOOM_MASK : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (b7) {\n                value = b6 ? (b5 ? injector.bf7 : injector.bf6) : (b5 ? injector.bf5 : injector.bf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.bf3 : injector.bf2) : (b5 ? injector.bf1 : injector.bf0);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if (value & mask) {\n                return injector;\n            }\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (b7) {\n                value = b6 ? (b5 ? injector.cbf7 : injector.cbf6) : (b5 ? injector.cbf5 : injector.cbf4);\n            }\n            else {\n                value = b6 ? (b5 ? injector.cbf3 : injector.cbf2) : (b5 ? injector.cbf1 : injector.cbf0);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            if (value & mask) {\n                injector = injector.parent;\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef$$1(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode, vcRefHost);\n        }\n        return di.viewContainerRef;\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_lInjector) {\n            this._lInjector = _lInjector;\n        }\n        NodeInjector.prototype.get = function (token) {\n            if (token === TemplateRef) {\n                return getOrCreateTemplateRef(this._lInjector);\n            }\n            if (token === ViewContainerRef) {\n                return getOrCreateContainerRef(this._lInjector);\n            }\n            if (token === ElementRef) {\n                return getOrCreateElementRef(this._lInjector);\n            }\n            if (token === ChangeDetectorRef) {\n                return getOrCreateChangeDetectorRef(this._lInjector, null);\n            }\n            return getOrCreateInjectable(this._lInjector, token);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef$$1(_lContainerNode, _hostNode) {\n            this._lContainerNode = _lContainerNode;\n            this._hostNode = _hostNode;\n            this._viewRefs = [];\n        }\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"element\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return getOrCreateElementRef(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"injector\", {\n            get: function () {\n                var injector = getOrCreateNodeInjectorForNode(this._hostNode);\n                return new NodeInjector(injector);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var parentLInjector = getParentLNode(this._hostNode).nodeInjector;\n                return parentLInjector ? new NodeInjector(parentLInjector) : new NullInjector();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef$$1.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef$$1.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef$$1.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && contextInjector) {\n                ngModuleRef = contextInjector.get(NgModuleRef, null);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef$$1.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef$$1.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef$$1.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef$$1.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef$$1.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef$$1;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef$1(hostNode.view, getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef$$1(_declarationParentView, elementRef, _tView, _renderer, _queries) {\n            this._declarationParentView = _declarationParentView;\n            this.elementRef = elementRef;\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n        }\n        TemplateRef$$1.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._declarationParentView, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            var viewRef = new ViewRef$1(viewNode.data, context);\n            viewRef._lViewNode = viewNode;\n            return viewRef;\n        };\n        return TemplateRef$$1;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var node = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var different = bindingUpdated2(v0, v1);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory() { return new ApplicationInitStatus(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory() { return new Console(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory() { return new Testability(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory() { return new TestabilityRegistry(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory() { return new PlatformRef(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory() { return new ApplicationRef(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'Éµx': nextContext,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'Éµql': loadQueryList,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'ÉµgV': getCurrentView,\n        'ÉµrV': restoreView,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµcp': elementClassProp,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµQr': registerContentQuery,\n        'ÉµrS': reserveSlots,\n        'Éµr': reference,\n        'Éµs': elementStyling,\n        'Éµsm': elementStylingMap,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n        'Éµzh': sanitizeHtml,\n        'Éµzs': sanitizeStyle,\n        'Éµzss': defaultStyleSanitizer,\n        'Éµzr': sanitizeResourceUrl,\n        'Éµzc': sanitizeScript,\n        'Éµzu': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty('ngBaseDef')) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-beta.0+43.sha-7bf5a43');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory() { return new ApplicationModule(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectElementRef = injectElementRef;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.Éµx = nextContext;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµgV = getCurrentView;\n    exports.ÉµrV = restoreView;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµr = reference;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStylingMap;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµcp = elementClassProp;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI1 = i18nInterpolation1;\n    exports.ÉµiI2 = i18nInterpolation2;\n    exports.ÉµiI3 = i18nInterpolation3;\n    exports.ÉµiI4 = i18nInterpolation4;\n    exports.ÉµiI5 = i18nInterpolation5;\n    exports.ÉµiI6 = i18nInterpolation6;\n    exports.ÉµiI7 = i18nInterpolation7;\n    exports.ÉµiI8 = i18nInterpolation8;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}